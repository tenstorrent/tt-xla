name: On nightly

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      test_group_cnt:
        description: 'Test group count'
        required: false
        default: "5"
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "8"
          - "10"
  schedule:
    - cron: '0 0 * * *'

permissions:
  packages: write
  checks: write

jobs:
  set-inputs:
    runs-on: ubuntu-latest
    outputs:
      test_group_cnt: ${{ steps.set-inputs.outputs.test_group_cnt }}
    steps:
      - name: Set Inputs
        id: set-inputs
        run: |
          default_test_group_cnt=3

          tgc=$(if [ -z "${{ inputs.test_group_cnt }}" ]; then echo $default_test_group_cnt; else echo ${{ inputs.test_group_cnt }}; fi)
          echo "test_group_cnt=$tgc" >> $GITHUB_OUTPUT

  build-image:
    uses: ./.github/workflows/call-build-docker.yml
    secrets: inherit

  build-ttxla:
    uses: ./.github/workflows/call-build.yml
    name: "Build tt-xla"
    secrets: inherit
    needs: build-image
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}

  nightly_tests:
    uses: ./.github/workflows/call-test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla ]
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image-base }}
      test_mark: 'nightly'
      use-shared-runners: false # Run nightly tests on Civ1
      artifact_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla.outputs.build_artifact_name }}

  generate-matrix:
    runs-on: ubuntu-latest
    needs: [ set-inputs ]
    outputs:
      test-full-model-matrix: ${{ steps.generate-matrix.outputs.test-full-model-matrix}}
      test-forge-models-matrix: ${{ steps.generate-forge-models-matrix.outputs.test-forge-models-matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Generate matrix
        id: generate-matrix
        shell: bash
        env:
          TEST_GROUP_CNT: ${{ needs.set-inputs.outputs.test_group_cnt }}
        run: |
            SCRIPT_PATH=".github/scripts/generate_test_model_matrix.py"
            TEST_MATRIX_PATH=".github/workflows/test-full-model-matrix.json"
            TESTS_TO_PARALLELIZE='[
              {
                "runs-on": "n150",
                "name": "run_jax"
              },
              {
                "runs-on": "n150",
                "name": "run_torch"
              },
              {
                "runs-on": "p150",
                "name": "run_jax"
              },
              {
                "runs-on": "p150",
                "name": "run_torch"
              }
            ]'
            python $SCRIPT_PATH $TEST_MATRIX_PATH "$TESTS_TO_PARALLELIZE" $TEST_GROUP_CNT  > modified-matrix.json
            echo "test-full-model-matrix=$(cat modified-matrix.json | jq -c)" >> $GITHUB_OUTPUT

      - name: Generate tt-forge-models matrix
        id: generate-forge-models-matrix
        shell: bash
        env:
          # FIXME - Consider hardcoding this to preferred value.
          # TEST_GROUP_CNT: ${{ needs.set-inputs.outputs.test_group_cnt }}
          TEST_GROUP_CNT: "10"
        run: |
            SCRIPT_PATH=".github/scripts/generate_test_model_matrix.py"
            TEST_MATRIX_PATH=".github/workflows/test-forge-models-matrix.json"
            TESTS_TO_PARALLELIZE='[
              {
                "runs-on": "n150",
                "name": "run_forge_models_torch",
                "dir": "./tests/runner/test_models.py"
              },
              {
                "runs-on": "p150",
                "name": "run_forge_models_torch",
                "dir": "./tests/runner/test_models.py"
              }
            ]'
            python $SCRIPT_PATH $TEST_MATRIX_PATH "$TESTS_TO_PARALLELIZE" $TEST_GROUP_CNT  > modified-matrix.json
            echo "test-forge-models-matrix=$(cat modified-matrix.json | jq -c)" >> $GITHUB_OUTPUT

  test_full_model:
    uses: ./.github/workflows/call-test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla, generate-matrix ]
    # This ensures the job runs regardless of success or failure of `nightly_tests`:
    if: success() || failure()
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image-base }}
      test_mark: 'model_test'
      test_matrix: ${{ needs.generate-matrix.outputs.test-full-model-matrix }}
      use-shared-runners: false # Run full model tests on Civ1
      artifact_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla.outputs.build_artifact_name }}

  # NEW - This is a single test job that runs all tt-forge-models tests.
  test_full_model_forge_models_passing:
    uses: ./.github/workflows/call-test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla, generate-matrix ]
    # This ensures the job runs regardless of success or failure of `nightly_tests`:
    if: success() || failure()
    with:
      timeout_minutes: 180
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      test_mark: 'expected_passing'
      test_matrix: ${{ needs.generate-matrix.outputs.test-forge-models-matrix }}
      use-shared-runners: false # Run full model tests on Civ1
      artifact_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla.outputs.build_artifact_name }}

  test_full_model_forge_models_not_expected_passing:
    uses: ./.github/workflows/call-test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla, generate-matrix ]
    # This ensures the job runs regardless of success or failure of `nightly_tests`:
    if: false #success() || failure()
    with:
      timeout_minutes: 180
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      test_mark: 'not expected_passing'
      test_matrix: ${{ needs.generate-matrix.outputs.test-forge-models-matrix }}
      use-shared-runners: false # Run full model tests on Civ1
      artifact_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla.outputs.build_artifact_name }}

  fail-notify:
    if: always()
    needs:
      - nightly_tests
      - test_full_model
      - test_full_model_forge_models_passing
      # - test_full_model_forge_models_not_expected_passing
      - build-image
      - build-ttxla
    runs-on: Ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: Ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Bad bad nightly: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}>",
              "channel": "C08GYB57C8M"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NIGHTLY_FAIL }}

      - name: Send Success Notification
        if: ${{ needs.fail-notify.outputs.failed == 'false' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Good nightly: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}>",
              "channel": "C08GYB57C8M"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NIGHTLY_SUCCESS }}
