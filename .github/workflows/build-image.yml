name: Build Docker Image

on:
  workflow_call:
    inputs:
      mlir_override:
        description: 'Git SHA of commit in tenstorrent/tt-mlir'
        required: false
        type: string
    outputs:
      docker-image:
        description: 'Docker image name'
        value: ${{ jobs.build-image.outputs.docker-image }}

jobs:
  build-image:
    outputs:
      docker-image: ${{ steps.build.outputs.docker-image }}
    runs-on: n300
    steps:
      - name: Fix permissions
        shell: bash
        run: sudo chown ubuntu:ubuntu -R $(pwd)

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Override tt-mlir SHA mlir_override is set
        if: ${{ inputs.mlir_override }}
        shell: bash
        run: |
            sed -i "s/set(TT_MLIR_VERSION \".*\")/set(TT_MLIR_VERSION \"${{ inputs.mlir_override }}\")/" third_party/CMakeLists.txt

      - name: Verify third_party directory
        shell: bash
        run: |
          echo "Contents of third_party directory:"
          ls -l third_party || echo "third_party directory is missing or empty"

      - name: Verify tt-mlir directory
        shell: bash
        run: |
          echo "Contents of third_party/tt-mlir:"
          ls -l third_party/tt-mlir || echo "tt-mlir directory is missing or empty"

      - name: Ensure dependencies for toolchain build
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y cmake build-essential
          echo "Dependencies installed for toolchain build"

      - name: Build Docker images and output the image name
        id: build
        shell: bash
        run: |
          set pipefail
          .github/build-docker-images.sh | tee docker.log
          DOCKER_CI_IMAGE=$(tail -n 1 docker.log)
          echo "DOCKER_CI_IMAGE $DOCKER_CI_IMAGE"
          echo "docker-image=$DOCKER_CI_IMAGE" >> "$GITHUB_OUTPUT"
