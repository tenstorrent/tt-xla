name: On nightly

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  packages: write
  checks: write

jobs:
  build-image:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit

  build-ttxla:
    strategy:
      fail-fast: false
      matrix:
        build_type: [true , false]
    uses: ./.github/workflows/build.yml
    secrets: inherit
    needs: build-image
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      debug_build: ${{ matrix.build_type }}
      enable_artifact_upload: ${{ matrix.build_type }}

  nightly_tests:
    uses: ./.github/workflows/test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla ]
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      run_id: ${{ github.run_id }}
      test_mark: 'nightly'
      build_options: |
        [
          {"runs-on": "n150", "name": "run_jax", "dir": "./tests/jax/single_chip"},
          {"runs-on": "n150", "name": "run_torch", "dir": "./tests/torch/single_chip"},
          {"runs-on": "n300", "name": "run_jax", "dir": "./tests/jax/multi_chip/n300"},
          {"runs-on": "llmbox", "name": "run_jax_4_devices", "dir": "./tests/jax/multi_chip/llmbox/4_devices"},
          {"runs-on": "llmbox", "name": "run_jax_8_devices", "dir": "./tests/jax/multi_chip/llmbox/8_devices"}
        ]

  test_full_model:
    uses: ./.github/workflows/test.yml
    secrets: inherit
    needs: [ build-image, build-ttxla, nightly_tests ]
    # This ensures the job runs regardless of success or failure of `nightly_tests`:
    if: success() || failure()
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      run_id: ${{ github.run_id }}
      test_mark: 'model_test'
      build_options: |
        [
          {"runs-on": "n150", "name": "run_jax", "dir": "./tests/jax/single_chip"},
          {"runs-on": "n150", "name": "run_torch", "dir": "./tests/torch/single_chip"},
          {"runs-on": "n300", "name": "run_jax", "dir": "./tests/jax/multi_chip/n300"},
          {"runs-on": "llmbox", "name": "run_jax_4_devices", "dir": "./tests/jax/multi_chip/llmbox/4_devices"},
          {"runs-on": "llmbox", "name": "run_jax_8_devices", "dir": "./tests/jax/multi_chip/llmbox/8_devices"}
        ]

  fail-notify:
    if: always()
    needs:
      - nightly_tests
      - test_full_model
      - build-image
      - build-ttxla
    runs-on: Ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: Ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Bad bad nightly: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}>",
              "channel": "C08GYB57C8M"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NIGHTLY_FAIL }}

      - name: Send Success Notification
        if: ${{ needs.fail-notify.outputs.failed == 'false' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Good nightly: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}>",
              "channel": "C08GYB57C8M"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NIGHTLY_SUCCESS }}
