name: Run test

on:
  # todo(vvukoman): remove after testing
  workflow_dispatch:
    inputs:
      preset:
        description: 'Preset to use for the tests'
        type: choice
        default: 'nightly'
        options:
          - 'push'
          - 'nightly'
          - 'model_test'
          - 'Custom'
      test_mark:
        description: 'Test mark to run (if preset is Custom)'
        type: string
      run_on:
        description: 'Run on specific hardware'
        type: choice
        default: 'All'
        options:
          - 'n150'
          - 'n300'
          - 'llmbox'
          - 'multichip'
          - 'All'
      dir:
        description: |
          Directory to run tests. Defaults:
            - n150: 'jax/single_chip torch/single_chip'
            - n300: 'jax/multi_chip/n300'
            - llmbox: 'jax/multi_chip/llmbox'
            - multichip: 'jax/multi_chip'
            - All: run on n150 all singlechip, on llmbox all multichip
        type: string
      mlir_override:
          description: 'Git SHA of commit in tenstorrent/tt-mlir'
          required: false
          type: string

permissions:
  packages: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.mlir_override }}
  cancel-in-progress: true

jobs:
  pre-commit:
    uses: ./.github/workflows/call-pre-commit.yml
    secrets: inherit

  inspect-changes:
    runs-on: ubuntu-latest
    outputs:
      skip-build-and-test: ${{ steps.inspect.outputs.skip-build-and-test }}
      run-pr-tests: ${{ steps.inspect.outputs.run-pr-tests }}
      run-perf-tests: ${{ steps.inspect.outputs.run-perf-tests }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/inspect-changes
        id: inspect

  build-image:
    needs: [ pre-commit, inspect-changes ]
    if: needs.inspect-changes.outputs.skip-build-and-test == 'false'
    uses: ./.github/workflows/call-build-docker.yml
    secrets: inherit
    with:
<<<<<<< HEAD:.github/workflows/manual-test.yml
      mlir_override: ${{ inputs.mlir_override }}
=======
      mlir_override: ${{ inputs.mlir_override}}
>>>>>>> 9e65a4c9 (testing out):.github/workflows/maunal-test.yml

  build-ttxla-codecov:
    uses: ./.github/workflows/call-build.yml
    name: "Build tt-xla with code coverage"
    secrets: inherit
    needs: [ inspect-changes, build-image ]
    if: needs.inspect-changes.outputs.skip-build-and-test == 'false'
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
<<<<<<< HEAD:.github/workflows/manual-test.yml
      mlir_override: ${{ inputs.mlir_override }}

  test-setup:
    runs-on: ubuntu-latest
    needs: build-ttxla
    if: always() && !cancelled()
    outputs:
      run_id: ${{ steps.set_inputs.outputs.run_id }}
      test_mark: ${{ steps.set_inputs.outputs.test_mark }}
      test_matrix: ${{ steps.set_inputs.outputs.test_matrix }}
    steps:
      - id: set_inputs
        run: |
          if [ '${{ inputs.preset }}' == 'Custom' ]; then
            echo "test_mark=${{ inputs.test_mark }}" >> $GITHUB_OUTPUT
          else
            echo "test_mark=${{ inputs.preset }}" >> $GITHUB_OUTPUT
          fi

          make_json_array() {
            local result=""
            local counter=1
            for arg in "$@"; do
              # Set use-shared-runners to true if we want to run on llmbox
              local shr=$(if [ "$runson" == "n300-llmbox" ]; then echo ", \"use-shared-runners\": \"true\""; fi)
              result+="{ \"runs-on\": \"$runson\", \"name\": \"${name}-${counter}\", \"dir\": \"$arg\"$shr },"
              ((counter++))
            done
            echo "${result%,}"
          }

          if [ '${{ inputs.run_on }}' == 'n150' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/single_chip ./tests/torch/single_chip'; else echo '${{ inputs.dir }}'; fi)
            runson='n150'
            name='run_single_chip'
            echo "test_matrix=[$(make_json_array $dir)]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'n300' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/n300'; else echo '${{ inputs.dir }}'; fi)
            runson='n300'
            name='run_2chip'
            echo "test_matrix=[$(make_json_array $dir)]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'llmbox' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/llmbox/4_devices ./tests/jax/multi_chip/llmbox/8_devices'; else echo '${{ inputs.dir }}'; fi)
            runson='n300-llmbox'
            name='run_4_8_chip'
            echo "test_matrix=[$(make_json_array $dir)]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'multichip' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/n300 ./tests/jax/multi_chip/llmbox/4_devices ./tests/jax/multi_chip/llmbox/8_devices'; else echo '${{ inputs.dir }}'; fi)
            runson='n300-llmbox'
            name='run_multi_chip'
            echo "test_matrix=[$(make_json_array $dir)]" >> $GITHUB_OUTPUT
          else
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/single_chip ./tests/torch/single_chip'; else echo '${{ inputs.dir }}'; fi)
            runson='n150'
            name='run_single_chip_n150'
            n150_matrix=$(make_json_array $dir)

            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/single_chip ./tests/torch/single_chip'; else echo '${{ inputs.dir }}'; fi)
            runson='p150'
            name='run_single_chip'
            p150_matrix=$(make_json_array $dir)

            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/n300'; else echo '${{ inputs.dir }}'; fi)
            runson='n300'
            name='run_multi_chip_n300'
            n300_matrix=$(make_json_array $dir)

            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/llmbox/4_devices ./tests/jax/multi_chip/llmbox/8_devices'; else echo '${{ inputs.dir }}'; fi)
            runson='n300-llmbox'
            name='run_multi_chip_llmbox'
            llmbox_matrix=$(make_json_array $dir)

            echo "test_matrix=[$n150_matrix,$p150_matrix,$n300_matrix,$llmbox_matrix]" >> $GITHUB_OUTPUT
          fi
      - name: Create job summary
        run: |
          echo "## Input Parameters" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Preset: ${{ inputs.preset }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Mark: ${{ inputs.test_mark }}" >> $GITHUB_STEP_SUMMARY
          echo "- Run On: ${{ inputs.run_on }}" >> $GITHUB_STEP_SUMMARY
          echo "- Directory: ${{ inputs.dir }}" >> $GITHUB_STEP_SUMMARY
          echo "### Evaluated run parameters" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: ${{ steps.set_inputs.outputs.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Mark: ${{ steps.set_inputs.outputs.test_mark }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Matrix: ${{ steps.set_inputs.outputs.test_matrix }}" >> $GITHUB_STEP_SUMMARY
=======
      mlir_override: ${{ inputs.mlir_override}}
      debug_build: true

  build-ttxla-release:
    if: needs.inspect-changes.outputs.skip-build-and-test == 'false' && (inputs.run_perf_benchmark || (vars.RUN_PERF_ON_UPLIFT == 'true'  && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'uplift')))
    uses: ./.github/workflows/call-build.yml
    name: "Build tt-xla release"
    secrets: inherit
    needs: [ inspect-changes, build-image ]
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      mlir_override: ${{ inputs.mlir_override}}
>>>>>>> 9e65a4c9 (testing out):.github/workflows/maunal-test.yml

  test:
    needs: [ inspect-changes, build-image, build-ttxla-codecov ]
    if: needs.inspect-changes.outputs.skip-build-and-test == 'false'
    uses: ./.github/workflows/call-test.yml
    secrets: inherit
    with:
<<<<<<< HEAD:.github/workflows/manual-test.yml
      docker_image: ${{ needs.build-image.outputs.docker-image-base }}
      test_mark: ${{ needs.test-setup.outputs.test_mark }}
      test_matrix: ${{ needs.test-setup.outputs.test_matrix }}
      artifact_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla.outputs.build_artifact_name }}
=======
      codecov: true
      test_mark: 'push'
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      use-shared-runners: false # Run PR on VMs
      artifact_run_id: ${{ needs.build-ttxla-codecov.outputs.artifacts_run_id }}
      wheel_artifact_name: ${{ needs.build-ttxla-codecov.outputs.wheel_artifact_name }}
      build_artifact_name: ${{ needs.build-ttxla-codecov.outputs.build_artifact_name }}

  perf-benchmark:
    if: needs.inspect-changes.outputs.skip-build-and-test == 'false' && (inputs.run_perf_benchmark || (vars.RUN_PERF_ON_UPLIFT == 'true'  && github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'uplift')))
    needs: [ inspect-changes, build-image, build-ttxla-release ]
    uses: tenstorrent/tt-forge/.github/workflows/perf-benchmark.yml@vvukoman/wheel-artifact-regex-name-support
    secrets: inherit
    with:
      project: tt-xla
      run_id: ${{ needs.build-ttxla-release.outputs.artifacts_run_id }}
      run_id_source: tt-xla
      ref: vvukoman/wheel-artifact-regex-name-support

  check-all-green:
    if: always()
    needs:
      - pre-commit
      - test
    runs-on: Ubuntu-latest
    steps:
    - name: Check if the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        allowed-skips: test
        jobs: ${{ toJSON(needs) }}
>>>>>>> 9e65a4c9 (testing out):.github/workflows/maunal-test.yml
