name: Run Test

on:
  workflow_dispatch:
    inputs:
      rebuild_xla:
        description: 'Rebuild XLA'
        required: false
        type: boolean
      preset:
        description: 'Preset to use for the tests'
        type: choice
        default: 'nightly'
        options:
          - 'push'
          - 'nightly'
          - 'model_test'
          - 'Custom'
      test_mark:
        description: 'Test mark to run (if preset is Custom)'
        type: string
      run_on:
        description: 'Run on specific hardware'
        type: choice
        default: 'All'
        options:
          - 'n150'
          - 'n300'
          - 'llmbox'
          - 'multichip'
          - 'All'
      dir:
        description: 'Directory to run tests in'
        type: string
        # defaults:
        # - 'n150': './tests/jax/single_chip ./tests/torch/single_chip'
        # - 'n300': './tests/jax/multi_chip/n300'
        # - 'llmbox': './tests/jax/multi_chip/llmbox'
        # - 'multichip': './tests/jax/multi_chip'
        # - 'All': ignored

jobs:
  build-image:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit

  build-xla:
    if: inputs.rebuild_xla
    uses: ./.github/workflows/build.yml
    secrets: inherit
    needs: build-image
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}

  build-resolution:
    runs-on: ubuntu-latest
    needs: build-xla
    if: always() && !cancelled()
    outputs:
      run_id: ${{ steps.set_inputs.outputs.run_id }}
      test_mark: ${{ steps.set_inputs.outputs.test_mark }}
      test_matrix: ${{ steps.set_inputs.outputs.test_matrix }}
    steps:
      - id: set_inputs
        run: |
          echo "run_id=$(if [ '${{ inputs.rebuild_xla }}' == 'true' ]; then echo ${{ github.run_id }}; fi;)" >> $GITHUB_OUTPUT
          if [ '${{ inputs.preset }}' == 'Custom' ]; then
            echo "test_mark=${{ inputs.test_mark }}" >> $GITHUB_OUTPUT
          else
            echo "test_mark=${{ inputs.preset }}" >> $GITHUB_OUTPUT
          fi
          if [ '${{ inputs.run_on }}' == 'n150' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/single_chip ./tests/torch/single_chip'; else echo '${{ inputs.dir }}'; fi)
            echo "test_matrix=[{\"runs-on\":\"n150\",\"name\":\"run_single_chip\",\"dir\":\"$dir\"}]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'n300' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/n300'; else echo '${{ inputs.dir }}'; fi)
            echo "test_matrix=[{\"runs-on\":\"n300\",\"name\":\"run_jax_2\",\"dir\":\"$dir\"}]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'llmbox' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip/llmbox'; else echo '${{ inputs.dir }}'; fi)
            echo "test_matrix=[{\"runs-on\":\"n300-llmbox\",\"name\":\"run_jax_4_8\",\"dir\":\"$dir\",\"sh-run\":\"true\"}]" >> $GITHUB_OUTPUT
          elif [ '${{ inputs.run_on }}' == 'multichip' ]; then
            dir=$(if [ -z '${{ inputs.dir }}' ]; then echo './tests/jax/multi_chip'; else echo '${{ inputs.dir }}'; fi)
            echo "test_matrix=[{\"runs-on\":\"n300-llmbox\",\"name\":\"run_jax_4_8\",\"dir\":\"$dir\",\"sh-run\":\"true\"}]" >> $GITHUB_OUTPUT
          # else do nothiing, leave test_matrix empty and do test default
          fi

  test:
    if: always() && !cancelled()
    uses: ./.github/workflows/test.yml
    needs: [build-image,build-resolution]
    secrets: inherit
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      test_mark: ${{ needs.build-resolution.outputs.test_mark }}
      run_id: ${{ needs.build-resolution.outputs.run_id }}
      test_matrix: ${{ needs.build-resolution.outputs.test_matrix }}
