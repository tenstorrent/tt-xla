name: Run Test Single

# This workflow allows manual triggering of tests with customizable presets, hardware targets, and directories.
# It builds the Docker image and project, sets up test parameters, and runs tests using the specified configuration.

on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'Path passed to pytest'
        required: true
        type: string
      mark:
        description: 'Mark passed to pytest'
        required: false
        type: string
      args:
        description: 'Additional arguments passed to pytest'
        required: false
        type: string
      runs_on:
        description: 'Choose runners for running test'
        required: true
        type: choice
        options:
          - 'n150'
          - 'n300'
          - 'p150'
          - 'n300-llmbox'
      shared_runners:
        description: 'Run test on the CIv2 runner'
        required: false
        default: false
        type: boolean
      parallel_groups:
        description: 'Number of parallel runners for test execution'
        required: true
        default: '1'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '8'
          - '10'
      mlir_override:
          description: 'Git SHA of commit in tenstorrent/tt-mlir'
          required: false
          type: string

permissions:
  packages: write
  checks: write

run-name: 'Test ( Dir: ${{ inputs.dir }} - Mark: ${{ inputs.mark }} - Run-on: ${{ inputs.runs_on }} )'

jobs:
  build-image:
    uses: ./.github/workflows/call-build-docker.yml
    secrets: inherit
    with:
      mlir_override: ${{ inputs.mlir_override }}

  build-ttxla:
    needs: build-image
    uses: ./.github/workflows/call-build.yml
    secrets: inherit
    with:
      docker_image: ${{ needs.build-image.outputs.docker-image }}
      mlir_override: ${{ inputs.mlir_override }}
  
  generate-test-config:
    needs: build-ttxla
    runs-on: ubuntu-latest
    outputs: 
      test-config: ${{ steps.generate.outputs.test-config }}
    steps:
      - id: generate
        run: |
          TEST_CONFIG='[
            {
              "runs-on": "${{ inputs.runs_on }}",
              "name": "Test",
              "dir": "${{ inputs.dir }}",
              "test-mark": "${{ inputs.mark }}",
              "shared-runners": "${{ inputs.shared_runners }}",
              "args": "${{ inputs.args }}",
              "parallel-groups": ${{ fromJSON(inputs.parallel_groups) }}
            }
          ]'

          echo $TEST_CONFIG
          
          echo "test-config=$(echo "$TEST_CONFIG" | jq -c)" >> $GITHUB_OUTPUT   

  test:
    if: always() && !cancelled() && inputs.preset != 'tt_forge_models'
    uses: ./.github/workflows/call-test.yml
    needs: [ build-image, build-ttxla, generate-test-config ]
    secrets: inherit
    with:
      test_suite: 'Custom'
      test_suite_custom: ${{ needs.generate-test-config.outputs.test-config }}
      docker_image: ${{ needs.build-image.outputs.docker-image-base }}
      artifact_release_run_id: ${{ needs.build-ttxla.outputs.artifacts_run_id }}
      wheel_release_artifact_name: ${{ needs.build-ttxla.outputs.wheel_artifact_name }}
      codecov: false
