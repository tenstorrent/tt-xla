name: Build Docs

on:
  workflow_call:
    inputs:
      docker-image:
        description: 'Docker image to use for build'
        required: true
        type: string

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - runs-on:
            - ubuntu-latest

    runs-on: ${{ matrix.build.runs-on }}

    container:
      image: ${{ inputs.docker-image }}

    env:
      MDBOOK_VERSION: 0.4.36

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "build-output-dir=$(pwd)/build" >> "$GITHUB_OUTPUT"

    - name: Git safe dir
      run: git config --global --add safe.directory ${{ steps.strings.outputs.work-dir }}

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system deps (Doxygen, Rust, Cargo)
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen curl

        # Install Rust
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source "$HOME/.cargo/env"

        # Install mdBook
        cargo install --version ${MDBOOK_VERSION} mdbook --locked

        # Ensure ~/.cargo/bin is in PATH for all later steps
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5

    - name: Build Docs
      shell: bash
      run: |
        export TTMLIR_TOOLCHAIN_DIR=/opt/ttmlir-toolchain/
        source venv/activate
        source "$HOME/.cargo/env"
        cmake -G Ninja -B build
        cmake --build build -- docs

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build/docs/book
