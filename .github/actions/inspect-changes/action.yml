name: "inspect-changes"
description: "Detects changes to source code, documentation, or other directories and sets flags for workflow control."
inputs: {}
outputs:
  skip-build-and-test:
    description: "True if only documentation/non-build files changed."
    value: ${{ steps.inspect.outputs.skip-build-and-test }}
  run-pr-tests:
    description: "True if code changes require PR tests."
    value: ${{ steps.inspect.outputs.run-pr-tests }}
  run-perf-tests:
    description: "True if performance-related files changed."
    value: ${{ steps.inspect.outputs.run-perf-tests }}
  only-run-forge-models:
    description: "True if only forge-models runner files changed."
    value: ${{ steps.inspect.outputs.only-run-forge-models }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Inspect changes
      id: inspect
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        skip_build_and_test=true
        run_pr_tests=false
        run_perf_tests=false
        only_run_forge_models=false
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(gh pr diff ${{ github.event.pull_request.number }} --name-only --repo ${{ github.repository }})
          echo "Changed files:"
          echo "$CHANGED_FILES"
          only_run_forge_models=true

          # Define patterns for files that can skip build/test
          # Only allow docs, markdown, gitignore, LICENSE, CODEOWNERS, and test config files
          skip_patterns=(
            "*.md"
            "*.gitignore"
            "*LICENSE*"
            "docs/*"
            "*CODEOWNERS*"
            ".github/workflows/test-matrix-presets/basic-test-nightly.json"
            ".github/workflows/test-matrix-presets/model-test-experimental.json"
            ".github/workflows/test-matrix-presets/model-test-passing.json"
            ".github/workflows/test-matrix-presets/model-test-xfail.json"
            ".github/workflows/schedule-*"
          )

          for file in $CHANGED_FILES; do
            # Check if file matches any skip pattern
            file_can_skip=false
            for pattern in "${skip_patterns[@]}"; do
              if [[ $file == $pattern ]]; then
                file_can_skip=true
                break
              fi
            done

            # If ANY file doesn't match skip patterns, we cannot skip build/test
            if [[ $file_can_skip == false ]]; then
              echo "Cannot skip test because of change to file: $file"
              skip_build_and_test=false
              run_pr_tests=true
            fi

            # Detect if all changes are strictly under tests/runner/
            if [[ ! $file =~ ^tests/runner/.* ]]; then
              only_run_forge_models=false
            fi

            # Example: detect perf uplift (customize as needed)
            if [[ $file == *"perf"* ]]; then
              run_perf_tests=true
            fi
          done
        else
          skip_build_and_test=false
          run_pr_tests=true
        fi
        echo "skip-build-and-test=$skip_build_and_test" >> "$GITHUB_OUTPUT"
        echo "run-pr-tests=$run_pr_tests" >> "$GITHUB_OUTPUT"
        echo "run-perf-tests=$run_perf_tests" >> "$GITHUB_OUTPUT"
        echo "only-run-forge-models=$only_run_forge_models" >> "$GITHUB_OUTPUT"
