FROM ubuntu:22.04
SHELL ["/bin/bash", "-c"]

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV MAKEFLAGS="-j$(nproc)"

# Install dependencies
RUN apt-get update && apt-get install -y \
    software-properties-common \
    build-essential \
    git \
    git-lfs \
    libhwloc-dev \
    pandoc \
    libtbb-dev \
    libcapstone-dev \
    pkg-config \
    linux-tools-generic \
    ninja-build \
    wget \
    ca-certificates \
    libgtest-dev \
    cmake \
    ccache \
    doxygen \
    graphviz \
    patchelf \
    libyaml-cpp-dev \
    libboost-all-dev \
    jq \
    curl \
    lcov \
    unzip \
    protobuf-compiler \
    libprotobuf-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install clang 17 (before Python changes to avoid conflicts)
RUN wget https://apt.llvm.org/llvm.sh && \
    chmod u+x llvm.sh && \
    ./llvm.sh 17 && \
    apt install -y libc++-17-dev libc++abi-17-dev && \
    ln -s /usr/bin/clang-17 /usr/bin/clang && \
    ln -s /usr/bin/clang++-17 /usr/bin/clang++ && \
    rm -f llvm.sh && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Add Python 3.11
RUN add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && \
    apt-get install -y python3.11 python3.11-venv python3.11-dev python3.11-distutils && \
    # Install pip for Python 3.11 using get-pip.py
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11 && \
    # Create python3 alias to python3.11 (but keep system python3 for system tools)
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2 && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Cache requirements.txt dependencies for faster CI installs
# The following will install Python packages from requirements.txt into /root/.local (user site) when run as root.
# This caches wheels and downloads for faster future installs, including into virtual environments.
COPY requirements.txt /tmp/requirements.txt
RUN python3.11 -m pip install --user --upgrade pip wheel setuptools && \
    python3.11 -m pip install --user -r /tmp/requirements.txt || true

# Install cmake packages
RUN pip install cmake && rm -rf /root/.cache/pip

# Install Googletest
RUN git clone https://github.com/google/googletest.git -b release-1.12.1 && \
    cd googletest && \
    mkdir build && \
    cd build && \
    cmake .. -DBUILD_GMOCK=OFF && \
    make && \
    make install && \
    cd ../.. && \
    rm -rf googletest /tmp/* /var/tmp/*

# Install mpi-ulfm from the tenstorrent repository
RUN set -eux; \
    apt-get update && \
    apt-get install -y -f \
        wget ca-certificates && \
    TMP_DIR="$(mktemp -d)" && \
    DEB_URL="https://github.com/dmakoviichuk-tt/mpi-ulfm/releases/download/v5.0.7-ulfm/openmpi-ulfm_5.0.7-1_amd64.deb" && \
    wget -qO "$TMP_DIR/ompi.deb" "$DEB_URL" && \
    apt-get install -f -y "$TMP_DIR/ompi.deb" && \
    rm -rf "$TMP_DIR" /tmp/* /var/tmp/* && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt update \
    && apt install -y gh \
    && gh --version \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Show total image size after build
RUN echo "Docker image size after build:" && du -sh / && \
    echo "Python version:" && python3 --version && \
    echo "Pip version:" && pip --version && \
    echo "Clang version:" && clang --version | head -1
