WARNING:root:Defaulting to PJRT_DEVICE=CPU
Using TT-Metal from wheel package: /__w/tt-xla/tt-xla/venv/lib/python3.11/site-packages/pjrt_plugin_tt/tt-metal
WARNING: TT plugin is setting XLA_STABLEHLO_COMPILE to 1. This is required for TT PJRT plugin to work correctly.
============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.4.2, pluggy-1.6.0 -- /__w/tt-xla/tt-xla/venv/bin/python
cachedir: .pytest_cache
rootdir: /__w/tt-xla/tt-xla
configfile: pytest.ini
plugins: split-0.10.0, forked-1.6.0, jaxtyping-0.3.2
collecting ... Workaround to exclude model: suryaocr from discovery. Issue #1166


[pytest-split] Splitting tests with algorithm: least_duration
[pytest-split] Running group 9/10 (estimated duration: 3925.35s)

collected 537 items / 501 deselected / 36 selected

tests/runner/test_models.py::test_all_models[mnist/pytorch-full-inference] PASSED
tests/runner/test_models.py::test_all_models[hardnet/pytorch-full-inference] PASSED
tests/runner/test_models.py::test_all_models[xception/pytorch-xception71-full-inference] PASSED
tests/runner/test_models.py::test_all_models[dla/pytorch-dla60x-full-inference] PASSED
tests/runner/test_models.py::test_all_models[mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference] PASSED
tests/runner/test_models.py::test_all_models[gpt2/pytorch-gpt2_sequence_classification-full-inference] PASSED
tests/runner/test_models.py::test_all_models[vit/pytorch-vit_l_16-full-inference] PASSED
tests/runner/test_models.py::test_all_models[unet/pytorch-unet_cityscapes-full-inference] PASSED
tests/runner/test_models.py::test_all_models[swin/image_classification/pytorch-swin_v2_b-full-inference] PASSED
tests/runner/test_models.py::test_all_models[regnet/pytorch-regnet_x_400mf-full-inference] PASSED
tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference] PASSED
tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference] FAILED
tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_b32_224-full-inference] PASSED
tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_l16_224-full-inference] PASSED
tests/runner/test_models.py::test_all_models[t5/pytorch-t5-base-full-inference] PASSED
tests/runner/test_models.py::test_all_models[ssd300_resnet50/pytorch-base-full-inference] PASSED
tests/runner/test_models.py::test_all_models[segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference] PASSED
tests/runner/test_models.py::test_all_models[qwen_2_5_coder/pytorch-3b_instruct-full-inference] PASSED
tests/runner/test_models.py::test_all_models[hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference] PASSED
tests/runner/test_models.py::test_all_models[yoloworld/pytorch-full-inference] PASSED
tests/runner/test_models.py::test_all_models[albert/token_classification/pytorch-base_v2-full-inference] PASSED
tests/runner/test_models.py::test_all_models[qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference] PASSED
tests/runner/test_models.py::test_all_models[vgg/pytorch-vgg13-full-inference] PASSED
tests/runner/test_models.py::test_all_models[vgg/pytorch-torchvision_vgg16-full-inference] PASSED
tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn34fpn-full-inference] PASSED
tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn50fpn-full-inference] PASSED
tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn101fpn-full-inference] PASSED
tests/runner/test_models.py::test_all_models[nbeats/pytorch-seasonality_basis-full-inference] PASSED
tests/runner/test_models.py::test_all_models[opt/causal_lm/pytorch-facebook/opt-350m-full-inference] PASSED
tests/runner/test_models.py::test_all_models[bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference] PASSED
tests/runner/test_models.py::test_all_models[ghostnet/pytorch-ghostnetv2_100.in1k-full-inference] PASSED
tests/runner/test_models.py::test_all_models[stereo/pytorch-medium-full-inference] PASSED
tests/runner/test_models.py::test_all_models[efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference] PASSED
tests/runner/test_models.py::test_all_models[autoencoder/pytorch-conv-full-inference] PASSED
tests/runner/test_models.py::test_all_models[efficientnet/pytorch-timm_efficientnet_b4-full-inference] PASSED
tests/runner/test_models.py::test_all_models[llama/sequence_classification/pytorch-llama_3_2_1b-full-inference] PASSED
============================================================
DECOMPOSITION OPERATIONS LOG
============================================================
=== MODEL: mnist/pytorch-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.log_softmax.int
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_default: _to_copy.default
decomposition_default: _log_softmax.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: hardnet/pytorch-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: xception/pytorch-xception71-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: dla/pytorch-dla60x-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_custom: avg_pool2d.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: gpt2/pytorch-gpt2_sequence_classification-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.arange.start
decomposition_default: _to_copy.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.triu.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.where.ScalarOther
decomposition_default: native_layer_norm.default
decomposition_default: addmm.default
decomposition_default: split.Tensor
decomposition_custom: split_with_sizes.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: t.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: vit/pytorch-vit_l_16-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.scaled_dot_product_attention.default
decomposition_core_aten: aten._scaled_dot_product_attention_math.default
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.transpose.int
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.squeeze.dim
decomposition_default: squeeze.dims
decomposition_custom: squeeze.default
decomposition_core_aten: aten._safe_softmax.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.all.dim
decomposition_core_aten: aten.zeros_like.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: unet/pytorch-unet_cityscapes-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: upsample_bilinear2d.vec
decomposition_core_aten: aten.where.ScalarOther
decomposition_core_aten: aten.divide.Tensor
decomposition_core_aten: aten.matmul.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: swin/image_classification/pytorch-swin_v2_b-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.pad.default
decomposition_core_aten: aten.softmax.int
decomposition_custom: adaptive_avg_pool2d.default
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.zero.default
decomposition_core_aten: aten.zeros_like.default
decomposition_default: slice_scatter.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.floor_divide.default
decomposition_core_aten: aten.ones.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten._unsafe_masked_index.default
decomposition_default: _unsafe_index.Tensor
decomposition_default: masked_fill.Scalar
decomposition_core_aten: aten.where.ScalarSelf
decomposition_default: norm.ScalarOpt_dim
decomposition_core_aten: aten.clamp_min.default
decomposition_core_aten: aten.roll.default
decomposition_core_aten: aten.new_zeros.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: regnet/pytorch-regnet_x_400mf-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.pad.default
decomposition_core_aten: aten.conv2d.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_custom: upsample_bilinear2d.vec
decomposition_core_aten: aten.matmul.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_core_aten: aten.ones.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: mlp_mixer/pytorch-mixer_b32_224-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.transpose.int
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: mlp_mixer/pytorch-mixer_l16_224-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.transpose.int
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: t5/pytorch-t5-base-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.min.other
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.type_as.default
decomposition_core_aten: aten.arange.start
decomposition_default: _to_copy.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.arange.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.zeros_like.default
decomposition_core_aten: aten.zeros.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: ssd300_resnet50/pytorch-base-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.softmax.int
decomposition_custom: upsample_bilinear2d.vec
decomposition_core_aten: aten.where.ScalarOther
decomposition_core_aten: aten.divide.Tensor
decomposition_core_aten: aten.transpose.int
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: qwen_2_5_coder/pytorch-3b_instruct-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.arange.start
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.arange.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.softmax.int
decomposition_default: _to_copy.default
decomposition_core_aten: aten.transpose.int
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.silu.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: yoloworld/pytorch-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.einsum.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.softmax.int
decomposition_default: _to_copy.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_core_aten: aten.silu.default
decomposition_default: split.Tensor
decomposition_custom: split_with_sizes.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: native_layer_norm.default
decomposition_default: norm.ScalarOpt_dim
decomposition_core_aten: aten.clamp_min.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: albert/token_classification/pytorch-base_v2-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.softmax.int
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.arange.start
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.arange.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.softmax.int
decomposition_default: _to_copy.default
decomposition_core_aten: aten.transpose.int
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.silu.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: vgg/pytorch-vgg13-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_default: _to_copy.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: vgg/pytorch-torchvision_vgg16-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_default: _to_copy.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: retinanet/pytorch-retinanet_rn34fpn-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: retinanet/pytorch-retinanet_rn50fpn-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: retinanet/pytorch-retinanet_rn101fpn-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: nbeats/pytorch-seasonality_basis-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.einsum.default
decomposition_core_aten: aten.squeeze.dim
decomposition_default: squeeze.dims
decomposition_custom: squeeze.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_default: _to_copy.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: opt/causal_lm/pytorch-facebook/opt-350m-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.arange.start
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.triu.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.where.ScalarOther
decomposition_default: _to_copy.default
decomposition_default: masked_fill.Scalar
decomposition_core_aten: aten.where.ScalarSelf
decomposition_default: slice_scatter.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: native_layer_norm.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.softmax.int
decomposition_default: native_layer_norm.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: ghostnet/pytorch-ghostnetv2_100.in1k-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: upsample_nearest2d.vec
decomposition_core_aten: aten.one_hot.default
decomposition_core_aten: aten.matmul.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: slice_scatter.default
decomposition_custom: avg_pool2d.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten.hardsigmoid.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_default: t.default
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: stereo/pytorch-medium-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.min.other
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.type_as.default
decomposition_core_aten: aten.layer_norm.default
decomposition_core_aten: aten.var_mean.dim
decomposition_core_aten: aten.arange.start
decomposition_default: _to_copy.default
decomposition_core_aten: aten.rsub.Scalar
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.arange.default
decomposition_default: masked_fill.Scalar
decomposition_core_aten: aten.where.ScalarSelf
decomposition_core_aten: aten.detach.default
decomposition_default: native_layer_norm.default
decomposition_core_aten: aten.stack.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.pad.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: autoencoder/pytorch-conv-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten.max_pool2d.default
decomposition_core_aten: aten.conv_transpose2d.input
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: efficientnet/pytorch-timm_efficientnet_b4-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten.conv2d.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_custom: adaptive_avg_pool2d.default
decomposition_core_aten: aten.linear.default
decomposition_default: _native_batch_norm_legit_no_training.default
decomposition_default: _native_batch_norm_legit.default
decomposition_default: _to_copy.default
decomposition_core_aten: aten.silu.default
decomposition_default: _adaptive_avg_pool2d.default
decomposition_custom: avg_pool2d.default
decomposition_default: t.default
decomposition_core_aten: aten.transpose.int
decomposition_default: addmm.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction

=== MODEL: llama/sequence_classification/pytorch-llama_3_2_1b-full-inference ===
decomposition_core_aten: profiler._record_function_enter_new.default
decomposition_core_aten: aten._propagate_xla_data.default
decomposition_core_aten: aten.matmul.default
decomposition_core_aten: aten.linear.default
decomposition_core_aten: aten.softmax.int
decomposition_core_aten: aten.arange.start
decomposition_default: full.default
decomposition_core_aten: aten.fill.Scalar
decomposition_core_aten: aten.triu.default
decomposition_core_aten: aten.arange.default
decomposition_core_aten: aten.where.ScalarOther
decomposition_default: _to_copy.default
decomposition_default: masked_fill.Scalar
decomposition_core_aten: aten.where.ScalarSelf
decomposition_default: slice_scatter.default
decomposition_core_aten: aten.transpose.int
decomposition_default: t.default
decomposition_core_aten: aten._unsafe_view.default
decomposition_core_aten: aten.silu.default
decomposition_core_aten: profiler._record_function_exit._RecordFunction
============================================================



=================================== FAILURES ===================================
_ test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference] _
device_output = tensor([[ 6.99219e-01,  2.57812e-01, -3.39844e-01, -2.06055e-01, -1.19141e-01, -1.17188e-02, -3.67188e-01,  4.96094e-0...e-01, -7.42188e-02, -4.46777e-02,  5.27344e-02, -4.58984e-01, -5.46875e-02, -3.66211e-02, -6.17188e-01, -5.15137e-02]])
golden_output = tensor([[ 4.76562e-01,  1.87500e-01, -2.39258e-01, -2.05078e-01, -1.42822e-02,  1.25732e-02, -3.63281e-01,  5.27344e-0...e-01, -7.08008e-02, -4.76074e-02, -2.72217e-02, -4.45312e-01, -9.71680e-02, -7.56836e-02, -5.62500e-01, -4.10156e-02]])
pcc_config = PccConfig(enabled=True, required_pcc=0.99, allclose=AllcloseConfig(enabled=True, rtol=0.01, atol=0.01))

    @staticmethod
    @run_on_cpu(Framework.TORCH)
    def _compare_pcc(
        device_output: PyTree, golden_output: PyTree, pcc_config: PccConfig
    ) -> None:
        def compute_pcc(x: torch.Tensor, y: torch.Tensor):
            x_flat, y_flat = x.flatten(), y.flatten()
            vx, vy = x_flat - x_flat.mean(), y_flat - y_flat.mean()
            denom = vx.norm() * vy.norm()

            return torch.tensor(float("nan")) if denom == 0 else (vx @ vy) / denom

        # If tensors are really close, pcc will be nan. Handle that before calculating
        # pcc.
        try:
>           TorchComparator._compare_allclose(
                device_output, golden_output, pcc_config.allclose
            )

tests/infra/comparators/torch_comparator.py:70:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/infra/runners/utils.py:41: in wrapper
    return runner.run_on_cpu(workload)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/device_runner.py:26: in run_on_cpu
    return self.run_on_device(workload, DeviceType.CPU)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/device_runner.py:40: in run_on_device
    return self._run_on_device(device_workload, device)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/torch_device_runner.py:25: in _run_on_device
    return workload.execute()
           ^^^^^^^^^^^^^^^^^^
tests/infra/workloads/workload.py:68: in execute
    return self.executable(*self.args, **self.kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

device_output = tensor([[ 6.99219e-01,  2.57812e-01, -3.39844e-01, -2.06055e-01, -1.19141e-01, -1.17188e-02, -3.67188e-01,  4.96094e-0...e-01, -7.42188e-02, -4.46777e-02,  5.27344e-02, -4.58984e-01, -5.46875e-02, -3.66211e-02, -6.17188e-01, -5.15137e-02]])
golden_output = tensor([[ 4.76562e-01,  1.87500e-01, -2.39258e-01, -2.05078e-01, -1.42822e-02,  1.25732e-02, -3.63281e-01,  5.27344e-0...e-01, -7.08008e-02, -4.76074e-02, -2.72217e-02, -4.45312e-01, -9.71680e-02, -7.56836e-02, -5.62500e-01, -4.10156e-02]])
allclose_config = AllcloseConfig(enabled=True, rtol=0.01, atol=0.01)

    @staticmethod
    @run_on_cpu(Framework.TORCH)
    def _compare_allclose(
        device_output: PyTree,
        golden_output: PyTree,
        allclose_config: AllcloseConfig,
    ) -> None:
        all_close = tree_map(
            lambda x, y: torch.allclose(
                x, y, rtol=allclose_config.rtol, atol=allclose_config.atol
            ),
            device_output,
            golden_output,
        )
        flat_close, _ = tree_flatten(all_close)
>       assert all(flat_close), (
               ^^^^^^^^^^^^^^^
            f"Allclose comparison failed. "
            f"Required: atol={allclose_config.atol}, rtol={allclose_config.rtol}."
        )
E       AssertionError: Allclose comparison failed. Required: atol=0.01, rtol=0.01.

tests/infra/comparators/torch_comparator.py:98: AssertionError

During handling of the above exception, another exception occurred:

test_entry = ModelTestEntry(path='/__w/tt-xla/tt-xla/third_party/tt_forge_models/mobilenetv2/pytorch/loader.py', variant_info=(<Mod...BILENET_V2_TORCHVISION: 'mobilenet_v2_torchvision'>, <class 'tt-forge-models.mobilenetv2.pytorch.loader.ModelLoader'>))
run_mode = <RunMode.INFERENCE: 'inference'>, op_by_op = None
record_property = <function record_property.<locals>.append_property at 0x7f9824149b20>
test_metadata = <tests.runner.test_utils.ModelTestConfig object at 0x7f978cce2290>
request = <FixtureRequest for <Function test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference]>>
capfd = <_pytest.capture.CaptureFixture object at 0x7f982417f3d0>

    @pytest.mark.model_test
    @pytest.mark.no_auto_properties
    @pytest.mark.parametrize(
        "run_mode",
        [RunMode.INFERENCE],
        ids=["inference"],
    )
    @pytest.mark.parametrize(
        "op_by_op",
        [None],
        ids=["full"],  # When op-by-op flow is required/supported, add here.
    )
    @pytest.mark.parametrize(
        "test_entry",
        test_entries,
        ids=create_test_id_generator(MODELS_ROOT),
    )
    def test_all_models(
        test_entry, run_mode, op_by_op, record_property, test_metadata, request, capfd
    ):

        loader_path = test_entry.path
        variant, ModelLoader = test_entry.variant_info

        # Ensure per-model requirements are installed, and roll back after the test
        with RequirementsManager.for_loader(loader_path):

            # Get the model loader and model info from desired model, variant.
            loader = ModelLoader(variant=variant)
            model_info = ModelLoader.get_model_info(variant=variant)
            print(f"Running {request.node.nodeid} - {model_info.name}", flush=True)

            succeeded = False
            try:
                # Only run the actual model test if not marked for skip. The record properties
                # function in finally block will always be called and handles the pytest.skip.
                if test_metadata.status != ModelTestStatus.NOT_SUPPORTED_SKIP:
                    tester = DynamicTorchModelTester(
                        run_mode,
                        loader=loader,
                        comparison_config=test_metadata.to_comparison_config(),
                    )

>                   tester.test()

tests/runner/test_models.py:69:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/infra/testers/single_chip/model/model_tester.py:115: in test
    self._test_inference()
tests/infra/testers/single_chip/model/model_tester.py:130: in _test_inference
    self._compare(tt_res, cpu_res)
tests/infra/testers/single_chip/model/model_tester.py:142: in _compare
    self._comparator.compare(device_out, golden_out)
tests/infra/comparators/comparator.py:38: in compare
    self._compare_pcc(device_output, golden_output, self._comparison_config.pcc)
tests/infra/runners/utils.py:41: in wrapper
    return runner.run_on_cpu(workload)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/device_runner.py:26: in run_on_cpu
    return self.run_on_device(workload, DeviceType.CPU)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/device_runner.py:40: in run_on_device
    return self._run_on_device(device_workload, device)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/infra/runners/torch_device_runner.py:25: in _run_on_device
    return workload.execute()
           ^^^^^^^^^^^^^^^^^^
tests/infra/workloads/workload.py:68: in execute
    return self.executable(*self.args, **self.kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

device_output = tensor([[ 6.99219e-01,  2.57812e-01, -3.39844e-01, -2.06055e-01, -1.19141e-01, -1.17188e-02, -3.67188e-01,  4.96094e-0...e-01, -7.42188e-02, -4.46777e-02,  5.27344e-02, -4.58984e-01, -5.46875e-02, -3.66211e-02, -6.17188e-01, -5.15137e-02]])
golden_output = tensor([[ 4.76562e-01,  1.87500e-01, -2.39258e-01, -2.05078e-01, -1.42822e-02,  1.25732e-02, -3.63281e-01,  5.27344e-0...e-01, -7.08008e-02, -4.76074e-02, -2.72217e-02, -4.45312e-01, -9.71680e-02, -7.56836e-02, -5.62500e-01, -4.10156e-02]])
pcc_config = PccConfig(enabled=True, required_pcc=0.99, allclose=AllcloseConfig(enabled=True, rtol=0.01, atol=0.01))

    @staticmethod
    @run_on_cpu(Framework.TORCH)
    def _compare_pcc(
        device_output: PyTree, golden_output: PyTree, pcc_config: PccConfig
    ) -> None:
        def compute_pcc(x: torch.Tensor, y: torch.Tensor):
            x_flat, y_flat = x.flatten(), y.flatten()
            vx, vy = x_flat - x_flat.mean(), y_flat - y_flat.mean()
            denom = vx.norm() * vy.norm()

            return torch.tensor(float("nan")) if denom == 0 else (vx @ vy) / denom

        # If tensors are really close, pcc will be nan. Handle that before calculating
        # pcc.
        try:
            TorchComparator._compare_allclose(
                device_output, golden_output, pcc_config.allclose
            )
        except AssertionError:
            leaf_pccs = tree_map(compute_pcc, device_output, golden_output)
            flat_pccs, _ = tree_flatten(leaf_pccs)
            pcc = min(flat_pccs)
>           assert pcc >= pcc_config.required_pcc, (
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                f"PCC comparison failed. "
                f"Calculated: pcc={pcc}. Required: pcc={pcc_config.required_pcc}."
            )
E           AssertionError: PCC comparison failed. Calculated: pcc=0.9898824691772461. Required: pcc=0.99.

tests/infra/comparators/torch_comparator.py:77: AssertionError
=============================== warnings summary ===============================
<frozen importlib._bootstrap>:241
  <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute

<frozen importlib._bootstrap>:241
  <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
-------- generated xml file: /__w/tt-xla/tt-xla/report_50513912925.xml ---------
============================== slowest durations ===============================
488.11s call     tests/runner/test_models.py::test_all_models[ghostnet/pytorch-ghostnetv2_100.in1k-full-inference]
466.57s call     tests/runner/test_models.py::test_all_models[hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference]
441.17s call     tests/runner/test_models.py::test_all_models[hardnet/pytorch-full-inference]
428.23s call     tests/runner/test_models.py::test_all_models[swin/image_classification/pytorch-swin_v2_b-full-inference]
418.39s call     tests/runner/test_models.py::test_all_models[yoloworld/pytorch-full-inference]
390.69s call     tests/runner/test_models.py::test_all_models[efficientnet/pytorch-timm_efficientnet_b4-full-inference]
379.86s call     tests/runner/test_models.py::test_all_models[stereo/pytorch-medium-full-inference]
320.49s call     tests/runner/test_models.py::test_all_models[segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference]
304.67s call     tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference]
271.85s call     tests/runner/test_models.py::test_all_models[efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference]
265.49s call     tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn101fpn-full-inference]
242.37s call     tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn50fpn-full-inference]
232.26s call     tests/runner/test_models.py::test_all_models[xception/pytorch-xception71-full-inference]
218.28s call     tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn34fpn-full-inference]
210.93s call     tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference]
208.43s call     tests/runner/test_models.py::test_all_models[ssd300_resnet50/pytorch-base-full-inference]
193.00s call     tests/runner/test_models.py::test_all_models[qwen_2_5_coder/pytorch-3b_instruct-full-inference]
192.97s call     tests/runner/test_models.py::test_all_models[unet/pytorch-unet_cityscapes-full-inference]
184.20s call     tests/runner/test_models.py::test_all_models[dla/pytorch-dla60x-full-inference]
166.21s call     tests/runner/test_models.py::test_all_models[nbeats/pytorch-seasonality_basis-full-inference]
158.70s call     tests/runner/test_models.py::test_all_models[qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference]
154.07s call     tests/runner/test_models.py::test_all_models[vit/pytorch-vit_l_16-full-inference]
148.92s call     tests/runner/test_models.py::test_all_models[opt/causal_lm/pytorch-facebook/opt-350m-full-inference]
146.55s call     tests/runner/test_models.py::test_all_models[t5/pytorch-t5-base-full-inference]
138.03s call     tests/runner/test_models.py::test_all_models[mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference]
129.80s call     tests/runner/test_models.py::test_all_models[regnet/pytorch-regnet_x_400mf-full-inference]
119.98s call     tests/runner/test_models.py::test_all_models[llama/sequence_classification/pytorch-llama_3_2_1b-full-inference]
108.89s call     tests/runner/test_models.py::test_all_models[gpt2/pytorch-gpt2_sequence_classification-full-inference]
104.76s call     tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_l16_224-full-inference]
88.24s call     tests/runner/test_models.py::test_all_models[albert/token_classification/pytorch-base_v2-full-inference]
78.13s call     tests/runner/test_models.py::test_all_models[bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference]
77.42s call     tests/runner/test_models.py::test_all_models[vgg/pytorch-vgg13-full-inference]
77.37s call     tests/runner/test_models.py::test_all_models[vgg/pytorch-torchvision_vgg16-full-inference]
71.93s call     tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_b32_224-full-inference]
47.16s call     tests/runner/test_models.py::test_all_models[mnist/pytorch-full-inference]
38.88s call     tests/runner/test_models.py::test_all_models[autoencoder/pytorch-conv-full-inference]
2.67s teardown tests/runner/test_models.py::test_all_models[stereo/pytorch-medium-full-inference]
2.63s teardown tests/runner/test_models.py::test_all_models[qwen_2_5_coder/pytorch-3b_instruct-full-inference]
2.53s teardown tests/runner/test_models.py::test_all_models[swin/image_classification/pytorch-swin_v2_b-full-inference]
1.61s teardown tests/runner/test_models.py::test_all_models[hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference]
1.58s teardown tests/runner/test_models.py::test_all_models[t5/pytorch-t5-base-full-inference]
1.43s teardown tests/runner/test_models.py::test_all_models[qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference]
1.31s teardown tests/runner/test_models.py::test_all_models[ghostnet/pytorch-ghostnetv2_100.in1k-full-inference]
1.30s teardown tests/runner/test_models.py::test_all_models[xception/pytorch-xception71-full-inference]
1.29s teardown tests/runner/test_models.py::test_all_models[yoloworld/pytorch-full-inference]
1.12s teardown tests/runner/test_models.py::test_all_models[opt/causal_lm/pytorch-facebook/opt-350m-full-inference]
1.09s teardown tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn101fpn-full-inference]
1.07s teardown tests/runner/test_models.py::test_all_models[regnet/pytorch-regnet_x_400mf-full-inference]
1.05s teardown tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn50fpn-full-inference]
1.02s teardown tests/runner/test_models.py::test_all_models[hardnet/pytorch-full-inference]
0.97s teardown tests/runner/test_models.py::test_all_models[efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference]
0.96s teardown tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference]
0.91s teardown tests/runner/test_models.py::test_all_models[llama/sequence_classification/pytorch-llama_3_2_1b-full-inference]
0.91s teardown tests/runner/test_models.py::test_all_models[unet/pytorch-unet_cityscapes-full-inference]
0.88s teardown tests/runner/test_models.py::test_all_models[vgg/pytorch-torchvision_vgg16-full-inference]
0.82s teardown tests/runner/test_models.py::test_all_models[mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference]
0.80s teardown tests/runner/test_models.py::test_all_models[nbeats/pytorch-seasonality_basis-full-inference]
0.80s teardown tests/runner/test_models.py::test_all_models[efficientnet/pytorch-timm_efficientnet_b4-full-inference]
0.78s teardown tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_b32_224-full-inference]
0.76s teardown tests/runner/test_models.py::test_all_models[mnist/pytorch-full-inference]
0.75s teardown tests/runner/test_models.py::test_all_models[ssd300_resnet50/pytorch-base-full-inference]
0.74s teardown tests/runner/test_models.py::test_all_models[segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference]
0.70s teardown tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn34fpn-full-inference]
0.70s teardown tests/runner/test_models.py::test_all_models[gpt2/pytorch-gpt2_sequence_classification-full-inference]
0.69s teardown tests/runner/test_models.py::test_all_models[vit/pytorch-vit_l_16-full-inference]
0.65s teardown tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_l16_224-full-inference]
0.58s teardown tests/runner/test_models.py::test_all_models[dla/pytorch-dla60x-full-inference]
0.57s teardown tests/runner/test_models.py::test_all_models[bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference]
0.56s teardown tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference]
0.51s teardown tests/runner/test_models.py::test_all_models[albert/token_classification/pytorch-base_v2-full-inference]
0.49s teardown tests/runner/test_models.py::test_all_models[autoencoder/pytorch-conv-full-inference]
0.45s teardown tests/runner/test_models.py::test_all_models[vgg/pytorch-vgg13-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[albert/token_classification/pytorch-base_v2-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[yoloworld/pytorch-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[vgg/pytorch-vgg13-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[vgg/pytorch-torchvision_vgg16-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[qwen_2_5_coder/pytorch-3b_instruct-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn34fpn-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[stereo/pytorch-medium-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[xception/pytorch-xception71-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[hardnet/pytorch-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[ssd300_resnet50/pytorch-base-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[swin/image_classification/pytorch-swin_v2_b-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_b32_224-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[t5/pytorch-t5-base-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[efficientnet/pytorch-timm_efficientnet_b4-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn50fpn-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[llama/sequence_classification/pytorch-llama_3_2_1b-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[opt/causal_lm/pytorch-facebook/opt-350m-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[ghostnet/pytorch-ghostnetv2_100.in1k-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[regnet/pytorch-regnet_x_400mf-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[unet/pytorch-unet_cityscapes-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[nbeats/pytorch-seasonality_basis-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[retinanet/pytorch-retinanet_rn101fpn-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[vit/pytorch-vit_l_16-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[gpt2/pytorch-gpt2_sequence_classification-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mlp_mixer/pytorch-mixer_l16_224-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[autoencoder/pytorch-conv-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[dla/pytorch-dla60x-full-inference]
0.01s setup    tests/runner/test_models.py::test_all_models[mnist/pytorch-full-inference]
=========================== short test summary info ============================
FAILED tests/runner/test_models.py::test_all_models[mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference]
==== 1 failed, 35 passed, 501 deselected, 2 warnings in 7758.10s (2:09:18) =====
