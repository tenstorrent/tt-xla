{
  "used_decompositions": {
    "norm.ScalarOpt_dim": {
      "count": 6,
      "models": [
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "yoloworld/pytorch-full-inference"
      ],
      "type": "default"
    },
    "native_group_norm.default": {
      "count": 2,
      "models": [
        "stable_diffusion_unet/pytorch-base-full-inference",
        "oft/pytorch-full-inference"
      ],
      "type": "default"
    },
    "split.Tensor": {
      "count": 31,
      "models": [
        "mamba/pytorch-mamba-2.8b-hf-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "yolov6/pytorch-yolov6l-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "phi3/phi_3_5/pytorch-mini_instruct-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "mamba/pytorch-mamba-370m-hf-full-inference",
        "mamba/pytorch-mamba-790m-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "yolov9/pytorch-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "mamba/pytorch-mamba-1.4b-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "yoloworld/pytorch-full-inference"
      ],
      "type": "default"
    },
    "native_layer_norm.default": {
      "count": 131,
      "models": [
        "bart/pytorch-large-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-multiset-base-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "mlp_mixer/pytorch-mixer_s32_224-full-inference",
        "mlp_mixer/pytorch-mixer_github-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "segformer/pytorch-mit_b1-full-inference",
        "albert/token_classification/pytorch-xxlarge_v1-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "distilbert/token_classification/pytorch-Davlan/distilbert-base-multilingual-cased-ner-hrl-full-inference",
        "squeezebert/pytorch-squeezebert-mnli-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "musicgen_small/pytorch-full-inference",
        "segformer/pytorch-mit_b0-full-inference",
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "albert/masked_lm/pytorch-large_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v1-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224_in21k-full-inference",
        "segformer/pytorch-mit_b3-full-inference",
        "albert/token_classification/pytorch-base_v1-full-inference",
        "albert/token_classification/pytorch-large_v1-full-inference",
        "bert/masked_lm/pytorch-bert-base-uncased-full-inference",
        "bert/token_classification/pytorch-dbmdz/bert-large-cased-finetuned-conll03-english-full-inference",
        "stereo/pytorch-large-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "yolos/pytorch-full-inference",
        "distilbert/sequence_classification/pytorch-distilbert-base-uncased-finetuned-sst-2-english-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "roberta/masked_lm/pytorch-xlm_base-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil-full-inference",
        "mlp_mixer/pytorch-mixer_l32_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224.goog_in21k-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "albert/sequence_classification/pytorch-imdb-full-inference",
        "deit/pytorch-base-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-multilingual-cased-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-multiset-base-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "perceiver/pytorch-deepmind/language-perceiver-full-inference",
        "segformer/pytorch-mit_b5-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "albert/masked_lm/pytorch-base_v2-full-inference",
        "albert/masked_lm/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-large_v2-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "roberta/pytorch-cardiffnlp/twitter-roberta-base-sentiment-full-inference",
        "segformer/pytorch-mit_b2-full-inference",
        "mgp_str_base/pytorch-full-inference",
        "albert/masked_lm/pytorch-base_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v2-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "albert/token_classification/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-xxlarge_v2-full-inference",
        "bloom/pytorch-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "fuyu/pytorch-adept/fuyu-8b-full-inference",
        "vit/pytorch-large-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-single-nq-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_in21k-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "albert/masked_lm/pytorch-large_v2-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "bert/sequence_classification/pytorch-textattack/bert-base-uncased-SST-2-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "deit/pytorch-base_distilled-full-inference",
        "deit/pytorch-small-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-uncased-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "albert/token_classification/pytorch-xlarge_v1-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-cased-full-inference",
        "vit/pytorch-base-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-single-nq-base-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil_in21k-full-inference",
        "mlp_mixer/pytorch-mixer_s16_224-full-inference",
        "segformer/pytorch-mit_b4-full-inference",
        "albert/masked_lm/pytorch-xlarge_v1-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "deit/pytorch-tiny-full-inference",
        "stereo/pytorch-small-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "mlp_mixer/pytorch-mixer_b32_224-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "yoloworld/pytorch-full-inference",
        "albert/token_classification/pytorch-base_v2-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference",
        "stereo/pytorch-medium-full-inference",
        "mlp_mixer/lucidrains/pytorch-base-full-inference",
        "clip/pytorch-openai/clip-vit-base-patch32-full-inference",
        "vit/pytorch-vit_h_14-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "masked_fill.Tensor": {
      "count": 6,
      "models": [
        "distilbert/token_classification/pytorch-Davlan/distilbert-base-multilingual-cased-ner-hrl-full-inference",
        "distilbert/sequence_classification/pytorch-distilbert-base-uncased-finetuned-sst-2-english-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-multilingual-cased-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-uncased-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-cased-full-inference"
      ],
      "type": "custom"
    },
    "masked_fill.Scalar": {
      "count": 62,
      "models": [
        "bart/pytorch-large-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "musicgen_small/pytorch-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b_instruct-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "gemma/pytorch-google/gemma-1.1-2b-it-full-inference",
        "stereo/pytorch-large-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "deepcogito/pytorch-v1_preview_llama_3b-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b_instruct-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "gemma/pytorch-google/gemma-2b-full-inference",
        "bloom/pytorch-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "stereo/pytorch-small-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "stereo/pytorch-medium-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b-full-inference",
        "clip/pytorch-openai/clip-vit-base-patch32-full-inference",
        "deepseek/pytorch-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "gemma/pytorch-google/gemma-1.1-7b-it-full-inference",
        "gemma/pytorch-google/gemma-2-2b-it-full-inference"
      ],
      "type": "default"
    },
    "t.default": {
      "count": 316,
      "models": [
        "bart/pytorch-large-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-multiset-base-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "mlp_mixer/pytorch-mixer_s32_224-full-inference",
        "mlp_mixer/pytorch-mixer_github-full-inference",
        "t5/pytorch-google/flan-t5-small-full-inference",
        "mamba/pytorch-mamba-2.8b-hf-full-inference",
        "deepseek/deepseek_coder/pytorch-1_3b_instruct-full-inference",
        "segformer/pytorch-mit_b1-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "qwen_3/causal_lm/pytorch-1_7b-full-inference",
        "albert/token_classification/pytorch-xxlarge_v1-full-inference",
        "vgg/pytorch-bn_vgg19-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "distilbert/token_classification/pytorch-Davlan/distilbert-base-multilingual-cased-ner-hrl-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b-full-inference",
        "squeezebert/pytorch-squeezebert-mnli-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "musicgen_small/pytorch-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "t5/pytorch-t5-large-full-inference",
        "t5/pytorch-google/flan-t5-base-full-inference",
        "segformer/pytorch-mit_b0-full-inference",
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "qwen_3/embedding/pytorch-embedding_0_6b-full-inference",
        "qwen_3/embedding/pytorch-embedding_4b-full-inference",
        "albert/masked_lm/pytorch-large_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v1-full-inference",
        "vgg/pytorch-vgg11-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b_instruct-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224_in21k-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "segformer/pytorch-mit_b3-full-inference",
        "gemma/pytorch-google/gemma-1.1-2b-it-full-inference",
        "qwen_2_5_coder/pytorch-0_5b-full-inference",
        "qwen_2_5_coder/pytorch-3b-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "albert/token_classification/pytorch-base_v1-full-inference",
        "albert/token_classification/pytorch-large_v1-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "bert/masked_lm/pytorch-bert-base-uncased-full-inference",
        "bert/token_classification/pytorch-dbmdz/bert-large-cased-finetuned-conll03-english-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "stereo/pytorch-large-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "yolos/pytorch-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "distilbert/sequence_classification/pytorch-distilbert-base-uncased-finetuned-sst-2-english-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "roberta/masked_lm/pytorch-xlm_base-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil-full-inference",
        "mlp_mixer/pytorch-mixer_l32_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224.goog_in21k-full-inference",
        "t5/pytorch-google/flan-t5-large-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "qwen_3/causal_lm/pytorch-4b-full-inference",
        "albert/sequence_classification/pytorch-imdb-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b_instruct-full-inference",
        "vgg/pytorch-vgg16-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "alexnet/pytorch-alexnetb-full-inference",
        "deit/pytorch-base-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-multilingual-cased-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b-full-inference",
        "xception/pytorch-xception41-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-multiset-base-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b_chat-full-inference",
        "phi3/phi_3_5/pytorch-mini_instruct-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "perceiver/pytorch-deepmind/language-perceiver-full-inference",
        "segformer/pytorch-mit_b5-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-3B-Base-full-inference",
        "albert/masked_lm/pytorch-base_v2-full-inference",
        "albert/masked_lm/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-large_v2-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "deepcogito/pytorch-v1_preview_llama_3b-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b_instruct-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "roberta/pytorch-cardiffnlp/twitter-roberta-base-sentiment-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "segformer/pytorch-mit_b2-full-inference",
        "gemma/pytorch-google/gemma-2b-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "mgp_str_base/pytorch-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-1B-Base-full-inference",
        "albert/masked_lm/pytorch-base_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v2-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "albert/token_classification/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-xxlarge_v2-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b_instruct-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "nbeats/pytorch-trend_basis-full-inference",
        "bloom/pytorch-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "fuyu/pytorch-adept/fuyu-8b-full-inference",
        "vit/pytorch-large-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-single-nq-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_in21k-full-inference",
        "mamba/pytorch-mamba-370m-hf-full-inference",
        "mamba/pytorch-mamba-790m-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "albert/masked_lm/pytorch-large_v2-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "bert/sequence_classification/pytorch-textattack/bert-base-uncased-SST-2-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "deit/pytorch-base_distilled-full-inference",
        "deit/pytorch-small-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-uncased-full-inference",
        "xception/pytorch-xception65-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "mamba/pytorch-mamba-1.4b-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "qwen_2_5_coder/pytorch-1_5b_instruct-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "albert/token_classification/pytorch-xlarge_v1-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-cased-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "vit/pytorch-base-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-single-nq-base-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "mistral/pytorch-ministral_3b_instruct-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil_in21k-full-inference",
        "mlp_mixer/pytorch-mixer_s16_224-full-inference",
        "t5/pytorch-t5-small-full-inference",
        "segformer/pytorch-mit_b4-full-inference",
        "qwen_2_5_coder/pytorch-1_5b-full-inference",
        "qwen_3/causal_lm/pytorch-0_6b-full-inference",
        "albert/masked_lm/pytorch-xlarge_v1-full-inference",
        "vgg/pytorch-vgg19-full-inference",
        "vgg/pytorch-bn_vgg19b-full-inference",
        "nbeats/pytorch-generic_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "deit/pytorch-tiny-full-inference",
        "stereo/pytorch-small-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "autoencoder/pytorch-linear-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "mnist/pytorch-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "mlp_mixer/pytorch-mixer_b32_224-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224-full-inference",
        "t5/pytorch-t5-base-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "qwen_2_5_coder/pytorch-3b_instruct-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "yoloworld/pytorch-full-inference",
        "albert/token_classification/pytorch-base_v2-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference",
        "vgg/pytorch-vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "nbeats/pytorch-seasonality_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "stereo/pytorch-medium-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b-full-inference",
        "mlp_mixer/lucidrains/pytorch-base-full-inference",
        "clip/pytorch-openai/clip-vit-base-patch32-full-inference",
        "oft/pytorch-full-inference",
        "vit/pytorch-vit_h_14-full-inference",
        "deepseek/pytorch-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "gemma/pytorch-google/gemma-1.1-7b-it-full-inference",
        "gemma/pytorch-google/gemma-2-2b-it-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "addmm.default": {
      "count": 200,
      "models": [
        "bart/pytorch-large-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "mlp_mixer/pytorch-mixer_s32_224-full-inference",
        "mlp_mixer/pytorch-mixer_github-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "segformer/pytorch-mit_b1-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "vgg/pytorch-bn_vgg19-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "squeezebert/pytorch-squeezebert-mnli-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "segformer/pytorch-mit_b0-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "vgg/pytorch-vgg11-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224_in21k-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "segformer/pytorch-mit_b3-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "distilbert/sequence_classification/pytorch-distilbert-base-uncased-finetuned-sst-2-english-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil-full-inference",
        "mlp_mixer/pytorch-mixer_l32_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224.goog_in21k-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "albert/sequence_classification/pytorch-imdb-full-inference",
        "vgg/pytorch-vgg16-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "alexnet/pytorch-alexnetb-full-inference",
        "deit/pytorch-base-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "segformer/pytorch-mit_b5-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "roberta/pytorch-cardiffnlp/twitter-roberta-base-sentiment-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "segformer/pytorch-mit_b2-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "nbeats/pytorch-trend_basis-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "vit/pytorch-large-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_in21k-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "bert/sequence_classification/pytorch-textattack/bert-base-uncased-SST-2-full-inference",
        "deit/pytorch-base_distilled-full-inference",
        "deit/pytorch-small-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "vit/pytorch-base-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil_in21k-full-inference",
        "mlp_mixer/pytorch-mixer_s16_224-full-inference",
        "segformer/pytorch-mit_b4-full-inference",
        "vgg/pytorch-vgg19-full-inference",
        "vgg/pytorch-bn_vgg19b-full-inference",
        "nbeats/pytorch-generic_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "deit/pytorch-tiny-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "autoencoder/pytorch-linear-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "mnist/pytorch-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "mlp_mixer/pytorch-mixer_b32_224-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "vgg/pytorch-vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "nbeats/pytorch-seasonality_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference",
        "oft/pytorch-full-inference",
        "vit/pytorch-vit_h_14-full-inference"
      ],
      "type": "default"
    },
    "_native_batch_norm_legit.default": {
      "count": 170,
      "models": [
        "dla/pytorch-dla102x2-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "yolov4/pytorch-base-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "vgg/pytorch-bn_vgg19-full-inference",
        "retinanet/pytorch-retinanet_rn18fpn-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "monodepth2/pytorch-stereo_640x192-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "fpn/pytorch-resnet50_fpn_v2-full-inference",
        "dla/pytorch-dla102-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "unet/pytorch-torchhub_brain_unet-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "retinanet/pytorch-retinanet_rn152fpn-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "openpose/v2/pytorch-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "dla/pytorch-dla46_c-full-inference",
        "dla/pytorch-dla60-full-inference",
        "dla/pytorch-dla102x-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "monodepth2/pytorch-mono+stereo_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_1024x320-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "dla/pytorch-dla46x_c-full-inference",
        "dla/pytorch-dla60x_c-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "dla/pytorch-dla169-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "monodepth2/pytorch-mono_1024x320-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "unet/pytorch-carvana_unet-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "monodepth2/pytorch-mono_640x192-full-inference",
        "monodepth2/pytorch-mono_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "yolov3/pytorch-base-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "dla/pytorch-dla34-full-inference",
        "yolov9/pytorch-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "monodepth2/pytorch-mono+stereo_640x192-full-inference",
        "monodepth2/pytorch-stereo_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "vgg/pytorch-bn_vgg19b-full-inference",
        "monodepth2/pytorch-stereo_1024x320-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "dla/pytorch-dla60x-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "unet/pytorch-unet_cityscapes-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "ssd300_resnet50/pytorch-base-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "yoloworld/pytorch-full-inference",
        "retinanet/pytorch-retinanet_rn34fpn-full-inference",
        "retinanet/pytorch-retinanet_rn50fpn-full-inference",
        "retinanet/pytorch-retinanet_rn101fpn-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "_native_batch_norm_legit_no_training.default": {
      "count": 170,
      "models": [
        "dla/pytorch-dla102x2-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "yolov4/pytorch-base-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "vgg/pytorch-bn_vgg19-full-inference",
        "retinanet/pytorch-retinanet_rn18fpn-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "monodepth2/pytorch-stereo_640x192-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "fpn/pytorch-resnet50_fpn_v2-full-inference",
        "dla/pytorch-dla102-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "unet/pytorch-torchhub_brain_unet-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "retinanet/pytorch-retinanet_rn152fpn-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "openpose/v2/pytorch-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "dla/pytorch-dla46_c-full-inference",
        "dla/pytorch-dla60-full-inference",
        "dla/pytorch-dla102x-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "monodepth2/pytorch-mono+stereo_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_1024x320-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "dla/pytorch-dla46x_c-full-inference",
        "dla/pytorch-dla60x_c-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "dla/pytorch-dla169-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "monodepth2/pytorch-mono_1024x320-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "unet/pytorch-carvana_unet-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "monodepth2/pytorch-mono_640x192-full-inference",
        "monodepth2/pytorch-mono_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "yolov3/pytorch-base-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "dla/pytorch-dla34-full-inference",
        "yolov9/pytorch-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "monodepth2/pytorch-mono+stereo_640x192-full-inference",
        "monodepth2/pytorch-stereo_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "vgg/pytorch-bn_vgg19b-full-inference",
        "monodepth2/pytorch-stereo_1024x320-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "dla/pytorch-dla60x-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "unet/pytorch-unet_cityscapes-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "ssd300_resnet50/pytorch-base-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "yoloworld/pytorch-full-inference",
        "retinanet/pytorch-retinanet_rn34fpn-full-inference",
        "retinanet/pytorch-retinanet_rn50fpn-full-inference",
        "retinanet/pytorch-retinanet_rn101fpn-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "squeeze.dims": {
      "count": 24,
      "models": [
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "nbeats/pytorch-trend_basis-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "nbeats/pytorch-generic_basis-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "nbeats/pytorch-seasonality_basis-full-inference",
        "oft/pytorch-full-inference",
        "vit/pytorch-vit_h_14-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "grid_sampler_2d.default": {
      "count": 1,
      "models": [
        "oft/pytorch-full-inference"
      ],
      "type": "default"
    },
    "_adaptive_avg_pool2d.default": {
      "count": 121,
      "models": [
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference"
      ],
      "type": "default"
    },
    "full.default": {
      "count": 101,
      "models": [
        "bart/pytorch-large-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "t5/pytorch-google/flan-t5-small-full-inference",
        "mamba/pytorch-mamba-2.8b-hf-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "deepseek/deepseek_coder/pytorch-1_3b_instruct-full-inference",
        "qwen_3/causal_lm/pytorch-1_7b-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b-full-inference",
        "squeezebert/pytorch-squeezebert-mnli-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "t5/pytorch-t5-large-full-inference",
        "t5/pytorch-google/flan-t5-base-full-inference",
        "qwen_3/embedding/pytorch-embedding_0_6b-full-inference",
        "qwen_3/embedding/pytorch-embedding_4b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b_instruct-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "gemma/pytorch-google/gemma-1.1-2b-it-full-inference",
        "qwen_2_5_coder/pytorch-0_5b-full-inference",
        "qwen_2_5_coder/pytorch-3b-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "t5/pytorch-google/flan-t5-large-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "qwen_3/causal_lm/pytorch-4b-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b_instruct-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "yolov6/pytorch-yolov6l-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b_chat-full-inference",
        "phi3/phi_3_5/pytorch-mini_instruct-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-3B-Base-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "deepcogito/pytorch-v1_preview_llama_3b-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b_instruct-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "roberta/pytorch-cardiffnlp/twitter-roberta-base-sentiment-full-inference",
        "gemma/pytorch-google/gemma-2b-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-1B-Base-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b_instruct-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b-full-inference",
        "bloom/pytorch-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "fuyu/pytorch-adept/fuyu-8b-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "mamba/pytorch-mamba-370m-hf-full-inference",
        "mamba/pytorch-mamba-790m-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "mamba/pytorch-mamba-1.4b-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "qwen_2_5_coder/pytorch-1_5b_instruct-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "mistral/pytorch-ministral_3b_instruct-full-inference",
        "t5/pytorch-t5-small-full-inference",
        "qwen_2_5_coder/pytorch-1_5b-full-inference",
        "qwen_3/causal_lm/pytorch-0_6b-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "t5/pytorch-t5-base-full-inference",
        "qwen_2_5_coder/pytorch-3b_instruct-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b-full-inference",
        "clip/pytorch-openai/clip-vit-base-patch32-full-inference",
        "deepseek/pytorch-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "gemma/pytorch-google/gemma-1.1-7b-it-full-inference",
        "gemma/pytorch-google/gemma-2-2b-it-full-inference"
      ],
      "type": "default"
    },
    "_log_softmax.default": {
      "count": 1,
      "models": [
        "mnist/pytorch-full-inference"
      ],
      "type": "default"
    },
    "_to_copy.default": {
      "count": 361,
      "models": [
        "bart/pytorch-large-full-inference",
        "dla/pytorch-dla102x2-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-multiset-base-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "mlp_mixer/pytorch-mixer_s32_224-full-inference",
        "mlp_mixer/pytorch-mixer_github-full-inference",
        "t5/pytorch-google/flan-t5-small-full-inference",
        "mamba/pytorch-mamba-2.8b-hf-full-inference",
        "yolov4/pytorch-base-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "deepseek/deepseek_coder/pytorch-1_3b_instruct-full-inference",
        "segformer/pytorch-mit_b1-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "qwen_3/causal_lm/pytorch-1_7b-full-inference",
        "albert/token_classification/pytorch-xxlarge_v1-full-inference",
        "vgg/pytorch-bn_vgg19-full-inference",
        "retinanet/pytorch-retinanet_rn18fpn-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "monodepth2/pytorch-stereo_640x192-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "distilbert/token_classification/pytorch-Davlan/distilbert-base-multilingual-cased-ner-hrl-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b-full-inference",
        "squeezebert/pytorch-squeezebert-mnli-full-inference",
        "fpn/pytorch-resnet50_fpn_v2-full-inference",
        "dla/pytorch-dla102-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "unet/pytorch-torchhub_brain_unet-full-inference",
        "musicgen_small/pytorch-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "t5/pytorch-t5-large-full-inference",
        "t5/pytorch-google/flan-t5-base-full-inference",
        "segformer/pytorch-mit_b0-full-inference",
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "qwen_3/embedding/pytorch-embedding_0_6b-full-inference",
        "qwen_3/embedding/pytorch-embedding_4b-full-inference",
        "albert/masked_lm/pytorch-large_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v1-full-inference",
        "vgg/pytorch-vgg11-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "retinanet/pytorch-retinanet_rn152fpn-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "openpose/v2/pytorch-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b_instruct-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224_in21k-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "segformer/pytorch-mit_b3-full-inference",
        "gemma/pytorch-google/gemma-1.1-2b-it-full-inference",
        "qwen_2_5_coder/pytorch-0_5b-full-inference",
        "qwen_2_5_coder/pytorch-3b-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "albert/token_classification/pytorch-base_v1-full-inference",
        "albert/token_classification/pytorch-large_v1-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "bert/masked_lm/pytorch-bert-base-uncased-full-inference",
        "bert/token_classification/pytorch-dbmdz/bert-large-cased-finetuned-conll03-english-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "stereo/pytorch-large-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "yolos/pytorch-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "distilbert/sequence_classification/pytorch-distilbert-base-uncased-finetuned-sst-2-english-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "dla/pytorch-dla46_c-full-inference",
        "dla/pytorch-dla60-full-inference",
        "dla/pytorch-dla102x-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "roberta/masked_lm/pytorch-xlm_base-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil-full-inference",
        "mlp_mixer/pytorch-mixer_l32_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224.goog_in21k-full-inference",
        "t5/pytorch-google/flan-t5-large-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "qwen_3/causal_lm/pytorch-4b-full-inference",
        "albert/sequence_classification/pytorch-imdb-full-inference",
        "qwen_2_5/casual_lm/pytorch-3b_instruct-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "yolov6/pytorch-yolov6l-full-inference",
        "vgg/pytorch-vgg16-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "alexnet/pytorch-alexnetb-full-inference",
        "deit/pytorch-base-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "monodepth2/pytorch-mono+stereo_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_1024x320-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-multilingual-cased-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b-full-inference",
        "xception/pytorch-xception41-full-inference",
        "dla/pytorch-dla46x_c-full-inference",
        "dla/pytorch-dla60x_c-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-multiset-base-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b-full-inference",
        "qwen_1_5/causal_lm/pytorch-0_5b_chat-full-inference",
        "phi3/phi_3_5/pytorch-mini_instruct-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "perceiver/pytorch-deepmind/language-perceiver-full-inference",
        "segformer/pytorch-mit_b5-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-3B-Base-full-inference",
        "albert/masked_lm/pytorch-base_v2-full-inference",
        "albert/masked_lm/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-large_v2-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "deepcogito/pytorch-v1_preview_llama_3b-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b_instruct-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "dla/pytorch-dla169-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "roberta/pytorch-cardiffnlp/twitter-roberta-base-sentiment-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "segformer/pytorch-mit_b2-full-inference",
        "gemma/pytorch-google/gemma-2b-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "mgp_str_base/pytorch-full-inference",
        "falcon/pytorch-tiiuae/Falcon3-1B-Base-full-inference",
        "albert/masked_lm/pytorch-base_v1-full-inference",
        "albert/masked_lm/pytorch-xxlarge_v2-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "albert/token_classification/pytorch-xlarge_v2-full-inference",
        "albert/token_classification/pytorch-xxlarge_v2-full-inference",
        "qwen_2_5/casual_lm/pytorch-0_5b_instruct-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "nbeats/pytorch-trend_basis-full-inference",
        "bloom/pytorch-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "monodepth2/pytorch-mono_1024x320-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "fuyu/pytorch-adept/fuyu-8b-full-inference",
        "vit/pytorch-large-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "dpr/context_encoder/pytorch-facebook/dpr-ctx_encoder-single-nq-base-full-inference",
        "unet/pytorch-carvana_unet-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_in21k-full-inference",
        "mamba/pytorch-mamba-370m-hf-full-inference",
        "mamba/pytorch-mamba-790m-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "albert/masked_lm/pytorch-large_v2-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "bert/sequence_classification/pytorch-textattack/bert-base-uncased-SST-2-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "deit/pytorch-base_distilled-full-inference",
        "deit/pytorch-small-full-inference",
        "monodepth2/pytorch-mono_640x192-full-inference",
        "monodepth2/pytorch-mono_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "yolov3/pytorch-base-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-uncased-full-inference",
        "xception/pytorch-xception65-full-inference",
        "dla/pytorch-dla34-full-inference",
        "yolov9/pytorch-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "mamba/pytorch-mamba-1.4b-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "qwen_2_5_coder/pytorch-1_5b_instruct-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "albert/token_classification/pytorch-xlarge_v1-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "monodepth2/pytorch-mono+stereo_640x192-full-inference",
        "monodepth2/pytorch-stereo_no_pt_640x192-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "distilbert/masked_lm/pytorch-distilbert-base-cased-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "vit/pytorch-base-full-inference",
        "dpr/question_encoder/pytorch-facebook/dpr-question_encoder-single-nq-base-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "mistral/pytorch-ministral_3b_instruct-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mlp_mixer/pytorch-mixer_b16_224_miil_in21k-full-inference",
        "mlp_mixer/pytorch-mixer_s16_224-full-inference",
        "t5/pytorch-t5-small-full-inference",
        "segformer/pytorch-mit_b4-full-inference",
        "qwen_2_5_coder/pytorch-1_5b-full-inference",
        "qwen_3/causal_lm/pytorch-0_6b-full-inference",
        "albert/masked_lm/pytorch-xlarge_v1-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "vgg/pytorch-vgg19-full-inference",
        "vgg/pytorch-bn_vgg19b-full-inference",
        "nbeats/pytorch-generic_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "deit/pytorch-tiny-full-inference",
        "stereo/pytorch-small-full-inference",
        "monodepth2/pytorch-stereo_1024x320-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "autoencoder/pytorch-linear-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "mnist/pytorch-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "dla/pytorch-dla60x-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "unet/pytorch-unet_cityscapes-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "mlp_mixer/pytorch-mixer_b32_224-full-inference",
        "mlp_mixer/pytorch-mixer_l16_224-full-inference",
        "t5/pytorch-t5-base-full-inference",
        "ssd300_resnet50/pytorch-base-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "qwen_2_5_coder/pytorch-3b_instruct-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "yoloworld/pytorch-full-inference",
        "albert/token_classification/pytorch-base_v2-full-inference",
        "qwen_2_5/casual_lm/pytorch-1_5b_instruct-full-inference",
        "vgg/pytorch-vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "retinanet/pytorch-retinanet_rn34fpn-full-inference",
        "retinanet/pytorch-retinanet_rn50fpn-full-inference",
        "retinanet/pytorch-retinanet_rn101fpn-full-inference",
        "nbeats/pytorch-seasonality_basis-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "bert/sentence_embedding_generation/pytorch-emrecan/bert-base-turkish-cased-mean-nli-stsb-tr-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "stereo/pytorch-medium-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b-full-inference",
        "mlp_mixer/lucidrains/pytorch-base-full-inference",
        "clip/pytorch-openai/clip-vit-base-patch32-full-inference",
        "oft/pytorch-full-inference",
        "vit/pytorch-vit_h_14-full-inference",
        "bi_lstm_crf/pytorch-default-full-inference",
        "deepseek/pytorch-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "gemma/pytorch-google/gemma-1.1-7b-it-full-inference",
        "gemma/pytorch-google/gemma-2-2b-it-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "default"
    },
    "_unsafe_index.Tensor": {
      "count": 22,
      "models": [
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "monodepth2/pytorch-stereo_640x192-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "yolos/pytorch-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "monodepth2/pytorch-mono+stereo_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_1024x320-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "monodepth2/pytorch-mono_1024x320-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "monodepth2/pytorch-mono_640x192-full-inference",
        "monodepth2/pytorch-mono_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_640x192-full-inference",
        "monodepth2/pytorch-stereo_no_pt_640x192-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "monodepth2/pytorch-stereo_1024x320-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "deepseek/pytorch-full-inference"
      ],
      "type": "default"
    },
    "slice_scatter.default": {
      "count": 57,
      "models": [
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "phi1_5/sequence_classification/pytorch-microsoft/phi-1_5-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_125M-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-pytdml-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b_instruct-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "gemma/pytorch-google/gemma-1.1-2b-it-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "phi1_5/causal_lm/pytorch-microsoft/phi-1_5-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_1b-full-inference",
        "phi1/token_classification/pytorch-microsoft/phi-1-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b-full-inference",
        "swin/masked_image_modeling/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "phi1_5/token_classification/pytorch-microsoft/phi-1_5-full-inference",
        "deepcogito/pytorch-v1_preview_llama_3b-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_3b_instruct-full-inference",
        "llama/causal_lm/pytorch-llama_3_2_3b_instruct-full-inference",
        "phi1/sequence_classification/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "gemma/pytorch-google/gemma-2b-full-inference",
        "bloom/pytorch-full-inference",
        "phi1/causal_lm/pytorch-microsoft/phi-1-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-1.3b-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_1_3B-full-inference",
        "gpt_neo/causal_lm/pytorch-gpt_neo_2_7B-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-350m-full-inference",
        "opt/sequence_classification/pytorch-facebook/opt-1.3b-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "phi2/causal_lm/pytorch-microsoft/phi-2-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-125m-full-inference",
        "phi2/sequence_classification/pytorch-microsoft/phi-2-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "opt/causal_lm/pytorch-facebook/opt-350m-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "llama/sequence_classification/pytorch-llama_3_2_1b-full-inference",
        "deepseek/pytorch-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-full-inference",
        "phi2/token_classification/pytorch-microsoft/phi-2-pytdml-full-inference",
        "gemma/pytorch-google/gemma-1.1-7b-it-full-inference",
        "gemma/pytorch-google/gemma-2-2b-it-full-inference"
      ],
      "type": "default"
    },
    "upsample_nearest2d.vec": {
      "count": 42,
      "models": [
        "yolov4/pytorch-base-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "retinanet/pytorch-retinanet_rn18fpn-full-inference",
        "monodepth2/pytorch-stereo_640x192-full-inference",
        "fpn/pytorch-resnet50_fpn_v2-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "retinanet/pytorch-retinanet_rn152fpn-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "monodepth2/pytorch-mono+stereo_no_pt_640x192-full-inference",
        "monodepth2/pytorch-mono+stereo_1024x320-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "monodepth2/pytorch-mono_1024x320-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "monodepth2/pytorch-mono_640x192-full-inference",
        "monodepth2/pytorch-mono_no_pt_640x192-full-inference",
        "yolov3/pytorch-base-full-inference",
        "yolov9/pytorch-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "monodepth2/pytorch-mono+stereo_640x192-full-inference",
        "monodepth2/pytorch-stereo_no_pt_640x192-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "monodepth2/pytorch-stereo_1024x320-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "yoloworld/pytorch-full-inference",
        "retinanet/pytorch-retinanet_rn34fpn-full-inference",
        "retinanet/pytorch-retinanet_rn50fpn-full-inference",
        "retinanet/pytorch-retinanet_rn101fpn-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference"
      ],
      "type": "custom"
    },
    "upsample_bilinear2d.vec": {
      "count": 10,
      "models": [
        "segformer/semantic_segmentation/pytorch-b1_finetuned_ade_512_512-full-inference",
        "beit/pytorch-base-full-inference",
        "beit/pytorch-large-full-inference",
        "segformer/semantic_segmentation/pytorch-b3_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b4_finetuned_ade_512_512-full-inference",
        "segformer/semantic_segmentation/pytorch-b0_finetuned_ade_512_512-full-inference",
        "unet/pytorch-unet_cityscapes-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "segformer/semantic_segmentation/pytorch-b2_finetuned_ade_512_512-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "custom"
    },
    "adaptive_avg_pool2d.default": {
      "count": 121,
      "models": [
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference"
      ],
      "type": "custom"
    },
    "avg_pool2d.default": {
      "count": 147,
      "models": [
        "dla/pytorch-dla102x2-full-inference",
        "swin/image_classification/pytorch-swin_v2_t-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2.timm-full-inference",
        "regnet/pytorch-regnet_y_1_6gf-full-inference",
        "regnet/pytorch-regnet_x_16gf-full-inference",
        "hrnet/pytorch-hrnet_w48-full-inference",
        "vovnet/pytorch-vovnet39-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite3.in1k-full-inference",
        "resnet/pytorch-resnet18-full-inference",
        "dla/pytorch-dla102-full-inference",
        "densenet/pytorch-densenet169-full-inference",
        "regnet/pytorch-regnet_y_080-full-inference",
        "regnet/pytorch-regnet_y_120-full-inference",
        "regnet/pytorch-regnet_y_320-full-inference",
        "regnet/pytorch-regnet_x_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenetv2_100-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v1_osmr-full-inference",
        "vgg/pytorch-hf_vgg19-full-inference",
        "vovnet/pytorch-vovnet27s-full-inference",
        "vovnet/pytorch-vovnet39_th-full-inference",
        "alexnet/pytorch-alexnet-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_small-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_large_100-full-inference",
        "resnet/pytorch-resnet101-full-inference",
        "efficientnet/pytorch-efficientnet_b6-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b5_in12k_ft_in1k-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "regnet/pytorch-regnet_y_064-full-inference",
        "regnet/pytorch-regnet_y_160-full-inference",
        "regnet/pytorch-regnet_y_3_2gf-full-inference",
        "regnet/pytorch-regnet_y_16gf-full-inference",
        "regnet/pytorch-regnet_x_3_2gf-full-inference",
        "inception/pytorch-inception_v4-full-inference",
        "hrnet/pytorch-hrnetv2_w40_osmr-full-inference",
        "vgg/pytorch-timm_vgg19_bn-full-inference",
        "vgg/pytorch-torchvision_vgg13-full-inference",
        "vgg/pytorch-torchvision_vgg19-full-inference",
        "vovnet/pytorch-vovnet57_th-full-inference",
        "ghostnet/pytorch-ghostnet_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite0.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b5-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnetv2_s_in21k-full-inference",
        "resnext/pytorch-resnext101_32x8d-full-inference",
        "resnext/pytorch-resnext101_32x8d_wsl-full-inference",
        "dla/pytorch-dla46_c-full-inference",
        "dla/pytorch-dla60-full-inference",
        "dla/pytorch-dla102x-full-inference",
        "regnet/pytorch-regnet_y_800mf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_1.0_224-full-inference",
        "hrnet/pytorch-hrnet_w18_small-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2-full-inference",
        "hrnet/pytorch-hrnetv2_w30_osmr-full-inference",
        "vgg/pytorch-torchvision_vgg16_bn-full-inference",
        "vovnet/pytorch-ese_vovnet99b-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite4.in1k-full-inference",
        "resnet/pytorch-resnet_50_hf-full-inference",
        "xception/pytorch-xception41-full-inference",
        "dla/pytorch-dla46x_c-full-inference",
        "dla/pytorch-dla60x_c-full-inference",
        "rcnn/pytorch-alexnet-full-inference",
        "regnet/pytorch-regnet_y_400mf-full-inference",
        "regnet/pytorch-regnet_y_8gf-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2-full-inference",
        "inception/pytorch-inception_v4.tf_in1k-full-inference",
        "inception/pytorch-inceptionv4-full-inference",
        "hrnet/pytorch-hrnet_w64-full-inference",
        "vgg/pytorch-torchvision_vgg11_bn-full-inference",
        "vgg/pytorch-torchvision_vgg19_bn-full-inference",
        "vovnet/pytorch-vovnet57-full-inference",
        "vovnet/pytorch-ese_vovnet39b-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw.ra_in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite1.in1k-full-inference",
        "efficientnet/pytorch-efficientnet_b4-full-inference",
        "resnext/pytorch-resnext26_32x4d_osmr-full-inference",
        "xception/pytorch-xception71.tf_in1k-full-inference",
        "dla/pytorch-dla169-full-inference",
        "densenet/pytorch-densenet121-full-inference",
        "mobilenetv1/pytorch-mobilenet_v1-full-inference",
        "swin/image_classification/pytorch-swin_t-full-inference",
        "swin/image_classification/pytorch-swin_b-full-inference",
        "regnet/pytorch-regnet_x_1_6gf-full-inference",
        "hrnet/pytorch-hrnet_w18-full-inference",
        "hrnet/pytorch-hrnet_w44-full-inference",
        "hrnet/pytorch-hrnetv2_w18_osmr-full-inference",
        "hrnet/pytorch-hrnetv2_w32_osmr-full-inference",
        "vgg/pytorch-vgg19_bn-full-inference",
        "vovnet/pytorch-ese_vovnet19b_dw-full-inference",
        "efficientnet/pytorch-efficientnet_b1-full-inference",
        "efficientnet/pytorch-efficientnet_b7-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b0-full-inference",
        "resnext/pytorch-resnext14_32x4d_osmr-full-inference",
        "resnext/pytorch-resnext50_32x4d_osmr-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "swin/image_classification/pytorch-swin_v2_s-full-inference",
        "wide_resnet/pytorch-wide_resnet50_2-full-inference",
        "hrnet/pytorch-hrnet_w30-full-inference",
        "hrnet/pytorch-hrnet_w32-full-inference",
        "hrnet/pytorch-hrnet_w40-full-inference",
        "hrnet/pytorch-hrnetv2_w44_osmr-full-inference",
        "googlenet/pytorch-googlenet-full-inference",
        "resnet/pytorch-resnet50-full-inference",
        "resnext/pytorch-resnext50_32x4d-full-inference",
        "xception/pytorch-xception65-full-inference",
        "dla/pytorch-dla34-full-inference",
        "yolov9/pytorch-full-inference",
        "regnet/pytorch-regnet_y_040-full-inference",
        "regnet/pytorch-regnet_y_32gf-full-inference",
        "regnet/pytorch-regnet_x_32gf-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.35_96-full-inference",
        "mobilenetv2/pytorch-google/mobilenet_v2_0.75_160-full-inference",
        "hrnet/pytorch-hrnet_w18_small_v2_osmr-full-inference",
        "vgg/pytorch-torchvision_vgg11-full-inference",
        "vgg/pytorch-torchvision_vgg13_bn-full-inference",
        "ghostnet/pytorch-ghostnet_100-full-inference",
        "resnet/pytorch-resnet34-full-inference",
        "resnet/pytorch-resnet152-full-inference",
        "efficientnet/pytorch-efficientnet_b0-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b0_ra_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnet_b4_ra2_in1k-full-inference",
        "efficientnet/pytorch-hf_hub_timm_tf_efficientnet_b0_aa_in1k-full-inference",
        "dla/pytorch-dla34.in1k-full-inference",
        "densenet/pytorch-densenet161-full-inference",
        "densenet/pytorch-densenet201-full-inference",
        "swin/image_classification/pytorch-swin_s-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2-full-inference",
        "wide_resnet/pytorch-wide_resnet101_2.timm-full-inference",
        "regnet/pytorch-regnet_x_800mf-full-inference",
        "mobilenetv3/pytorch-mobilenet_v3_large-full-inference",
        "mobilenetv3/pytorch-mobilenetv3_small_100-full-inference",
        "resnet/pytorch-resnet50_timm-full-inference",
        "efficientnet/pytorch-efficientnet_b2-full-inference",
        "efficientnet/pytorch-efficientnet_b3-full-inference",
        "efficientnet/pytorch-hf_hub_timm_efficientnetv2_rw_s_ra2_in1k-full-inference",
        "resnext/pytorch-resnext101_64x4d_osmr-full-inference",
        "hardnet/pytorch-full-inference",
        "xception/pytorch-xception71-full-inference",
        "dla/pytorch-dla60x-full-inference",
        "mobilenetv1/pytorch-mobilenetv1_100.ra4_e3600_r224_in1k-full-inference",
        "swin/image_classification/pytorch-swin_v2_b-full-inference",
        "regnet/pytorch-regnet_x_400mf-full-inference",
        "mobilenetv2/pytorch-google/deeplabv3_mobilenet_v2_1.0_513-full-inference",
        "mobilenetv2/pytorch-mobilenet_v2_torchvision-full-inference",
        "hrnet/pytorch-hrnet_w18.ms_aug_in1k-full-inference",
        "vgg/pytorch-torchvision_vgg16-full-inference",
        "ghostnet/pytorch-ghostnetv2_100.in1k-full-inference",
        "efficientnet_lite/pytorch-tf_efficientnet_lite2.in1k-full-inference",
        "efficientnet/pytorch-timm_efficientnet_b4-full-inference"
      ],
      "type": "custom"
    },
    "split_with_sizes.default": {
      "count": 33,
      "models": [
        "mamba/pytorch-mamba-2.8b-hf-full-inference",
        "nanogpt/pytorch-FinancialSupport/NanoGPT-full-inference",
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "gpt2/pytorch-gpt2-full-inference",
        "yolov6/pytorch-yolov6n-full-inference",
        "yolov6/pytorch-yolov6l-full-inference",
        "yolov10/pytorch-yolov10x-full-inference",
        "yolov10/pytorch-yolov10n-full-inference",
        "phi3/phi_3_5/pytorch-mini_instruct-full-inference",
        "yolov8/pytorch-yolov8x-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "mamba/pytorch-mamba-370m-hf-full-inference",
        "mamba/pytorch-mamba-790m-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-mono-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-nl-full-inference",
        "yolov6/pytorch-yolov6m-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "yolov9/pytorch-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "mamba/pytorch-mamba-1.4b-hf-full-inference",
        "codegen/pytorch-Salesforce/codegen-350M-multi-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "yolov8/pytorch-yolov8n-full-inference",
        "yolov6/pytorch-yolov6s-full-inference",
        "gpt2/pytorch-gpt2_sequence_classification-full-inference",
        "yoloworld/pytorch-full-inference",
        "oft/pytorch-full-inference",
        "deepseek/pytorch-full-inference"
      ],
      "type": "custom"
    },
    "squeeze.default": {
      "count": 24,
      "models": [
        "opt/qa/pytorch-facebook/opt-350m-full-inference",
        "bert/question_answering/pytorch-phiyodr/bert-large-finetuned-squad2-full-inference",
        "xglm/pytorch-xglm-564M-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-multiset-base-full-inference",
        "stable_diffusion_unet/pytorch-base-full-inference",
        "swin/image_classification/pytorch-microsoft/swinv2-tiny-patch4-window8-256-full-inference",
        "distilbert/question_answering/pytorch-distilbert-base-cased-distilled-squad-full-inference",
        "vit/pytorch-vit_b_32-full-inference",
        "albert/question_answering/pytorch-squad2-full-inference",
        "nbeats/pytorch-trend_basis-full-inference",
        "vit/pytorch-vit_b_16-full-inference",
        "swin/image_classification/pytorch-microsoft/swin-tiny-patch4-window7-224-full-inference",
        "bert/question_answering/pytorch-bert-large-cased-whole-word-masking-finetuned-squad-full-inference",
        "xglm/pytorch-xglm-1.7B-full-inference",
        "vit/pytorch-vit_l_32-full-inference",
        "dpr/reader/pytorch-facebook/dpr-reader-single-nq-base-full-inference",
        "opt/qa/pytorch-facebook/opt-125m-full-inference",
        "opt/qa/pytorch-facebook/opt-1.3b-full-inference",
        "nbeats/pytorch-generic_basis-full-inference",
        "vit/pytorch-vit_l_16-full-inference",
        "nbeats/pytorch-seasonality_basis-full-inference",
        "oft/pytorch-full-inference",
        "vit/pytorch-vit_h_14-full-inference",
        "glpn_kitti/pytorch-full-inference"
      ],
      "type": "custom"
    }
  },
  "unused_decompositions": [
    "embedding_dense_backward.default",
    "native_layer_norm_backward.default",
    "slice_backward.default",
    "select_backward.default",
    "_native_batch_norm_legit_functional.default",
    "_native_batch_norm_legit.no_stats",
    "soft_margin_loss.default",
    "im2col.default",
    "_euclidean_dist.default",
    "index_copy.default",
    "index_copy.dimname",
    "index_copy_.default",
    "index_copy_.dimname",
    "log_sigmoid_forward.default",
    "unsafe_split.Tensor",
    "binary_cross_entropy.default",
    "dot.default",
    "_prelu_kernel.default",
    "nll_loss_forward.default",
    "nll_loss_backward.default",
    "nll_loss_backward.grad_input",
    "_log_softmax_backward_data.default",
    "unbind.int",
    "linspace.Tensor_Tensor",
    "_scaled_dot_product_flash_attention_for_cpu.default",
    "upsample_nearest1d.vec",
    "upsample_nearest3d.vec",
    "upsample_linear1d.vec",
    "upsample_trilinear3d.vec",
    "upsample_nearest1d.default",
    "upsample_nearest2d.default",
    "upsample_nearest3d.default",
    "upsample_linear1d.default",
    "upsample_bilinear2d.default",
    "upsample_trilinear3d.default"
  ],
  "summary": {
    "total_in_decomps_txt": 59,
    "used": 24,
    "unused": 35
  }
}
